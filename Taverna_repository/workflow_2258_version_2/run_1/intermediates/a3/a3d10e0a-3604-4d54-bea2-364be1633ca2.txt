<ns2:getResultResponse xmlns:ns2="http://soap.jdispatcher.ebi.ac.uk"><output>BLASTP 2.2.26 [Sep-21-2011]


Reference: Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaffer, 
Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), 
"Gapped BLAST and PSI-BLAST: a new generation of protein database search
programs",  Nucleic Acids Res. 25:3389-3402.

Query= protein2
         (76 letters)

Database: uniprotkb 
           23,734,728 sequences; 7,785,494,668 total letters

Searching..................................................done



                                                                 Score    E
Sequences producing significant alignments:                      (bits) Value

SP:AC4_ABMVW P0C6F9 Protein AC4 OS=Abutilon mosaic virus (isolat...   112   9e-32
TR:Q9J050_9GEMI Q9J050 Putative uncharacterized protein AC4 OS=C...   102   7e-28
TR:Q9J048_9GEMI Q9J048 Putative uncharacterized protein AC4 OS=C...   102   7e-28
TR:Q09KA3_9GEMI Q09KA3 AC4 protein OS=Chino del tomate virus-[RK...   102   7e-28
TR:E7E1J4_9GEMI E7E1J4 PTGS suppressor OS=Abutilon mosaic virus ...   102   9e-28
TR:E7E1I8_9GEMI E7E1I8 PTGS suppressor OS=Abutilon mosaic virus ...   102   9e-28
TR:G8XR45_9GEMI G8XR45 AC4 protein OS=Tomato begomovirus - [Cuba...   102   1e-27
TR:B6DX41_9GEMI B6DX41 AC4 protein OS=Tomato yellow leaf distort...   102   1e-27
TR:Q96613_9GEMI Q96613 AC4 protein OS=Abutilon mosaic virus-HW G...   101   3e-27
TR:Q9YL73_9GEMI Q9YL73 AC4 protein OS=Chino del tomate virus-[IC...   100   4e-27
TR:B3CJ50_9GEMI B3CJ50 AC4 protein OS=Tobacco leaf rugose virus ...   100   4e-27
TR:Q2F1F3_9GEMI Q2F1F3 AL4 protein OS=Chino del tomate virus GN=...   100   6e-27
TR:E5KG12_9GEMI E5KG12 Symptom expression protein OS=Okra yellow...   100   1e-26
TR:E5KCL3_9GEMI E5KCL3 Symptom expression protein OS=Okra yellow...   100   1e-26
TR:Q19LF3_9GEMI Q19LF3 AC4 OS=Sida mosaic Sinaloa virus GN=AC4 P...    99   2e-26
TR:E2G6Z5_9GEMI E2G6Z5 AC4 protein OS=Rhynchosia rugose golden m...    99   2e-26
TR:Q5XLQ0_9GEMI Q5XLQ0 Symptom expression protein OS=Okra yellow...    99   2e-26
TR:A5X2T9_9GEMI A5X2T9 AC4 OS=Wissadula golden mosaic St Thomas ...    98   7e-26
TR:B8Y9I5_9GEMI B8Y9I5 AC4 OS=Sida golden mosaic virus - Florida...    97   9e-26
TR:O71206_9GEMI O71206 AC4 OS=Potato yellow mosaic Trinidad viru...    97   1e-25
TR:O71964_9GEMI O71964 AC4 OS=Sida golden mosaic virus GN=AC4 PE...    96   5e-25
TR:E5KBZ4_9GEMI E5KBZ4 AC4 OS=Sida golden yellow vein virus-[Jam...    94   1e-24
TR:B0FN56_9GEMI B0FN56 AC4 OS=Rhynchosia golden mosaic virus GN=...    94   3e-24
TR:F6KD54_9GEMI F6KD54 AC4 protein OS=Whitefly VEM 1 begomovirus...    93   6e-24
TR:G5CV32_9GEMI G5CV32 AC4 protein OS=Sida golden yellow vein vi...    92   9e-24
TR:F5BH44_9GEMI F5BH44 AC4 protein OS=Sida golden yellow vein vi...    92   9e-24
TR:B0FN68_9GEMI B0FN68 AC4 OS=Rhynchosia golden mosaic virus GN=...    92   9e-24
TR:Q3LTP9_CALCV Q3LTP9 AC4 OS=Cabbage leaf curl virus (isolate J...    92   1e-23
TR:Q3LTN5_CALCV Q3LTN5 AC4 OS=Cabbage leaf curl virus (isolate J...    92   1e-23
TR:Q6R7R4_9GEMI Q6R7R4 AC4 OS=Tomato mosaic leaf curl virus GN=a...    91   2e-23
TR:B0FN63_9GEMI B0FN63 AC4 OS=Rhynchosia golden mosaic virus GN=...    91   3e-23
TR:E2FZV1_9GEMI E2FZV1 C4 protein OS=Jatropha mosaic India virus...    92   3e-23
TR:G3KGY8_9GEMI G3KGY8 AC4 OS=Tomato chlorotic leaf distortion v...    91   3e-23
TR:E2CUT8_9GEMI E2CUT8 AC4 OS=Tomato leaf deformation virus GN=A...    91   3e-23
TR:E5KC05_9GEMI E5KC05 AC4 OS=Sida golden mosaic Liguanea virus-...    91   5e-23
TR:Q2L8B7_9GEMI Q2L8B7 AL4 OS=Rhynchosia golden mosaic virus GN=...    90   1e-22
TR:P89131_9GEMI P89131 AC4 protein OS=Sida yellow vein virus GN=...    90   1e-22
TR:Q5TJJ3_9GEMI Q5TJJ3 AC4 protein OS=Tomato leaf curl Sinaloa v...    89   1e-22
TR:G5CV25_9GEMI G5CV25 AC4 protein OS=Sida yellow mottle virus G...    89   1e-22
TR:F5BB91_9GEMI F5BB91 AC4 protein OS=Sida yellow mottle virus [...    89   1e-22
TR:C3TUK1_9GEMI C3TUK1 AC4 OS=Bhendi yellow vein mosaic virus GN...    90   2e-22
TR:Q9IZ46_9GEMI Q9IZ46 AC4 OS=Bhendi yellow vein mosaic virus-[M...    90   2e-22
TR:A5H184_9GEMI A5H184 AC4 protein OS=Tomato yellow leaf curl Vi...    89   3e-22
TR:P89126_9GEMI P89126 AC4 protein OS=Sida golden mosaic Hondura...    89   3e-22
TR:Q75QI2_9GEMI Q75QI2 C4 OS=Tomato leaf curl Java virus-[Agerat...    89   4e-22
TR:H6UUZ4_9GEMI H6UUZ4 C4 protein OS=Jatropha curcas mosaic viru...    89   4e-22
TR:F5C7S8_9GEMI F5C7S8 AC4 protein OS=Jatropha curcas mosaic vir...    89   4e-22
TR:A7LIE2_9GEMI A7LIE2 C4 OS=Okra leaf curl Mali virus GN=C4 PE=...    89   4e-22
TR:E5KBW6_9GEMI E5KBW6 AC4 OS=Sida golden mosaic Buckup virus-[J...    88   6e-22
TR:Q9YNV8_9GEMI Q9YNV8 AL4 OS=Sida golden yellow vein virus-[A11...    87   8e-22
TR:Q4ZGG5_9GEMI Q4ZGG5 AC4 OS=Okra yellow mosaic Mexico virus GN...    87   8e-22
TR:D5IBW0_9GEMI D5IBW0 AC4 OS=Jatropha curcas mosaic virus-[Dha]...    87   1e-21
TR:B8Y3K7_9GEMI B8Y3K7 C4 protein OS=Cotton leaf curl Gezira vir...    87   2e-21
TR:B1PIX9_9GEMI B1PIX9 C4 protein OS=Cotton leaf curl Gezira vir...    87   2e-21
TR:Q9Z099_9GEMI Q9Z099 C4 protein OS=Tobacco leaf curl virus GN=...    87   2e-21
TR:Q9Z082_9GEMI Q9Z082 C4 protein OS=Tobacco leaf curl virus GN=...    87   2e-21
TR:Q9YJ14_9GEMI Q9YJ14 C4 protein OS=Tobacco leaf curl virus GN=...    87   2e-21
TR:B6EBG1_9GEMI B6EBG1 AC4 protein OS=Tobacco yellow crinkle vir...    87   2e-21
TR:B6E954_9GEMI B6E954 AC4 protein OS=Tobacco yellow crinkle vir...    87   2e-21
TR:C8ZLK2_9GEMI C8ZLK2 AC4 protein OS=Malvastrum yellow vein Hon...    87   2e-21
TR:A7DXL6_9GEMI A7DXL6 C4 protein OS=Tomato leaf curl Diana viru...    86   2e-21
TR:Q4VYZ2_9GEMI Q4VYZ2 AC4 protein OS=Tobacco leaf curl Yunnan v...    86   3e-21
TR:E1V2J2_9GEMI E1V2J2 AC4 protein OS=Ageratum enation virus GN=...    86   3e-21
TR:D6PZR0_9GEMI D6PZR0 AC4 OS=Okra yellow mosaic Mexico virus - ...    86   3e-21
TR:C0L9G5_9GEMI C0L9G5 C4 OS=Tomato leaf curl Nigeria virus-[Nig...    86   4e-21
TR:Q8B6V3_9GEMI Q8B6V3 AC4 protein OS=Tobacco leaf curl Yunnan v...    86   5e-21
TR:Q776V0_9GEMI Q776V0 Transcriptional regulator protein OS=Toba...    86   5e-21
TR:A0AB21_9GEMI A0AB21 AC4 protein OS=Malvastrum yellow mosaic v...    86   5e-21
TR:C0MHQ4_9GEMI C0MHQ4 Putative uncharacterized protein C4 OS=To...    86   5e-21
TR:C0MHP5_9GEMI C0MHP5 Putative uncharacterized protein C4 OS=To...    86   5e-21
TR:Q0Z968_ICMV Q0Z968 AC4 (Fragment) OS=Indian cassava mosaic vi...    85   6e-21
TR:A7DXN3_9GEMI A7DXN3 C4 protein OS=Tomato leaf curl Toliara vi...    85   1e-20
TR:Q6R7Q7_9GEMI Q6R7Q7 AC4 OS=Tomato yellow margin leaf curl vir...    85   1e-20
TR:Q0Z970_ICMV Q0Z970 AC4 OS=Indian cassava mosaic virus PE=4 SV=1     85   1e-20
TR:Q9Z0B5_9GEMI Q9Z0B5 C4 protein OS=Tobacco leaf curl virus GN=...    84   1e-20
TR:Q9Z085_9GEMI Q9Z085 C4 protein OS=Tobacco leaf curl virus GN=...    84   1e-20
TR:Q91AL1_9GEMI Q91AL1 C4 OS=Tobacco leaf curl virus PE=4 SV=1         84   1e-20
TR:Q910W5_9GEMI Q910W5 C4 OS=Tobacco leaf curl virus PE=4 SV=1         84   1e-20
TR:Q77I77_9GEMI Q77I77 C4 OS=Tobacco leaf curl Zimbabwe virus PE...    84   1e-20
TR:B8ZWM5_9GEMI B8ZWM5 C4 protein OS=Pepper yellow vein Mali vir...    84   1e-20
TR:Q7TAS6_ICMV Q7TAS6 AC4 protein OS=Indian cassava mosaic virus...    85   2e-20
TR:Q2MDG5_9GEMI Q2MDG5 AC4 protein OS=Malvastrum leaf curl virus...    84   2e-20
TR:Q9Z0B7_9GEMI Q9Z0B7 C4 protein OS=Tobacco leaf curl virus GN=...    84   2e-20
TR:D6PZQ5_9GEMI D6PZQ5 AC4 OS=Okra yellow mosaic Mexico virus - ...    84   2e-20
TR:D2EBE1_9GEMI D2EBE1 C4 protein OS=Pepper yellow vein Mali vir...    84   2e-20
TR:D1GV16_9GEMI D1GV16 AC4 protein OS=Ageratum enation virus GN=...    84   2e-20
TR:A7DXG6_9GEMI A7DXG6 C4 protein OS=Tobacco leaf curl Zimbabwe ...    84   2e-20
TR:Q9IGX8_9GEMI Q9IGX8 AC4 protein OS=Tobacco leaf curl Yunnan v...    84   3e-20
TR:E7CSZ0_9GEMI E7CSZ0 AC4 protein OS=Sida micrantha mosaic viru...    84   3e-20
TR:Q6A0H1_9GEMI Q6A0H1 AC4 protein OS=Stachytarpheta leaf curl v...    84   4e-20
TR:H2DF24_9GEMI H2DF24 Putative uncharacterized protein C4 OS=To...    84   4e-20
TR:A0AB15_9GEMI A0AB15 AC4 protein OS=Malvastrum yellow mosaic v...    84   4e-20
TR:F8K9W4_9GEMI F8K9W4 C4 protein OS=Cotton leaf curl Gezira vir...    84   4e-20
TR:D1GZ59_9GEMI D1GZ59 C4 protein OS=Cotton leaf curl Gezira vir...    84   4e-20
TR:Q0KFW8_9GEMI Q0KFW8 AC4 protein OS=Tomato leaf curl Guangxi v...    84   4e-20
TR:D1GZC4_9GEMI D1GZC4 C4 protein OS=Cotton leaf curl Gezira vir...    84   4e-20
TR:D1GZB9_9GEMI D1GZB9 C4 protein OS=Cotton leaf curl Gezira vir...    84   4e-20
TR:Q9IN47_9GEMI Q9IN47 AC4 OS=Cotton leaf curl Gezira virus GN=A...    83   5e-20
TR:Q80P76_9GEMI Q80P76 C4 protein OS=Hollyhock leaf crumple viru...    83   5e-20
TR:Q774U0_9GEMI Q774U0 C4 OS=Cotton leaf curl Gezira virus-[Okra...    83   5e-20
TR:E5AZV1_9GEMI E5AZV1 Putative uncharacterized protein C4 OS=Ok...    83   5e-20
TR:D6PM00_9GEMI D6PM00 C4 protein OS=Cotton leaf curl Gezira vir...    83   5e-20
SP:AC4_TPCTV Q88891 Protein C4 OS=Tomato pseudo-curly top virus ...    83   6e-20
TR:Q9Z0B9_9GEMI Q9Z0B9 C4 protein OS=Tobacco leaf curl virus GN=...    83   6e-20
TR:Q6RCU5_9GEMI Q6RCU5 AC4 protein OS=Pepper yellow vein Mali vi...    83   6e-20
TR:Q6RCT9_9GEMI Q6RCT9 C4 protein OS=Tomato leaf curl Mali virus...    83   6e-20
TR:I0C063_9GEMI I0C063 C4 protein OS=Ageratum enation virus GN=A...    83   6e-20
TR:E7CT11_9GEMI E7CT11 AC4 protein OS=Sida micrantha mosaic viru...    83   6e-20
TR:E3ULT0_9GEMI E3ULT0 AC4 OS=Tomato chino La Paz virus GN=AC4 P...    83   6e-20
TR:D2EBD5_9GEMI D2EBD5 C4 protein OS=Pepper yellow vein Mali vir...    83   6e-20
TR:Q5JZL1_9GEMI Q5JZL1 AC4 protein OS=Senecio yellow mosaic viru...    83   6e-20
TR:A7DXH2_9GEMI A7DXH2 C4 protein OS=Bean leaf curl Madagascar v...    83   6e-20
TR:Q8B6U9_9GEMI Q8B6U9 AC4 protein OS=Tobacco leaf curl Yunnan v...    83   7e-20
TR:D1GZH9_9GEMI D1GZH9 C4 protein OS=Cotton leaf curl Gezira vir...    83   8e-20
TR:Q9Z0C5_9GEMI Q9Z0C5 C4 protein OS=Tobacco leaf curl virus GN=...    82   8e-20
TR:E5CYF3_9GEMI E5CYF3 C4 OS=Sweet potato begomovirus GN=C4 PE=4...    82   8e-20
TR:D4HSB2_9GEMI D4HSB2 C4 OS=Sweet potato leaf curl virus GN=C4 ...    82   8e-20
TR:B8ZWP3_9GEMI B8ZWP3 C4 protein OS=Pepper yellow vein Mali vir...    82   8e-20
TR:Q5WM64_9GEMI Q5WM64 AC4 protein OS=Ageratum yellow vein China...    83   8e-20
TR:Q0KFX4_9GEMI Q0KFX4 AC4 protein OS=Tomato leaf curl Guangxi v...    83   8e-20
TR:F2X902_9GEMI F2X902 C4 OS=Sweet potato leaf curl Sao Paulo vi...    82   8e-20
TR:F2X8X8_9GEMI F2X8X8 C4 OS=Sweet potato leaf curl virus PE=4 SV=1    82   8e-20
TR:E5CYF2_9GEMI E5CYF2 C4 OS=Sweet potato begomovirus GN=C4 PE=4...    82   8e-20
TR:D1GZB3_9GEMI D1GZB3 C4 protein OS=Cotton leaf curl Gezira vir...    83   8e-20
TR:Q992L4_9GEMI Q992L4 C4 protein OS=Tomato leaf curl Malaysia v...    82   1e-19
TR:G9CLY3_9GEMI G9CLY3 AC4 protein OS=Sida mosaic Alagoas virus ...    82   1e-19
TR:E2G6Y8_9GEMI E2G6Y8 AC4 protein OS=Rhynchosia golden mosaic H...    82   1e-19
TR:B8ZWL9_9GEMI B8ZWL9 C4 protein OS=Pepper yellow vein Mali vir...    82   1e-19
TR:Q0JY06_9GEMI Q0JY06 AC4 protein OS=Malvastrum leaf curl virus...    82   1e-19
TR:Q8QVG9_9GEMI Q8QVG9 C4 protein OS=Ageratum enation virus GN=C...    82   2e-19
TR:Q7T5U7_9GEMI Q7T5U7 AL4 protein OS=Tomato chino La Paz virus ...    82   2e-19
TR:H2E6X9_9GEMI H2E6X9 C4 protein OS=Sauropus leaf curl virus GN...    82   2e-19
TR:H2E6W7_9GEMI H2E6W7 C4 protein OS=Sauropus leaf curl virus GN...    82   2e-19
TR:D6PZQ0_9GEMI D6PZQ0 AC4 OS=Okra yellow mosaic Mexico virus - ...    82   2e-19
TR:C5J9I8_9GEMI C5J9I8 AC4 protein OS=Clerodendrum golden mosaic...    82   2e-19
TR:Q8JLL5_9GEMI Q8JLL5 Transcriptional regulator protein OS=Stac...    82   2e-19
TR:Q6A0H7_9GEMI Q6A0H7 AC4 protein OS=Stachytarpheta leaf curl v...    82   2e-19
TR:Q68V34_9GEMI Q68V34 AC4 protein OS=Sida yellow mosaic China v...    82   2e-19
TR:Q4GXW6_9GEMI Q4GXW6 Putative AC4 protein OS=Sida yellow mosai...    82   2e-19
TR:Q09M33_9GEMI Q09M33 AC4 OS=Ageratum yellow vein Hualian virus...    82   2e-19
TR:C5J4Q8_9GEMI C5J4Q8 Putative uncharacterized protein C4 OS=Ok...    82   2e-19
TR:Q9YNW4_9GEMI Q9YNW4 AL4 OS=Sida golden mosaic Florida virus-U...    81   2e-19
TR:H8WR39_9GEMI H8WR39 AV4 protein OS=African cassava mosaic Bur...    81   2e-19
TR:G1C2N6_9GEMI G1C2N6 AC4 protein OS=Ageratum enation virus GN=...    81   2e-19
TR:B7ZDQ3_9GEMI B7ZDQ3 AC4 protein OS=Ageratum enation virus GN=...    81   2e-19
TR:B0FTY0_9GEMI B0FTY0 C4 protein OS=Tomato leaf curl Ghana viru...    82   2e-19
TR:E7CT18_9GEMI E7CT18 AC4 protein OS=Sida micrantha mosaic viru...    81   2e-19
TR:Q8UZ54_ICMV Q8UZ54 AC4 protein OS=Indian cassava mosaic virus...    82   2e-19
TR:Q8V979_9GEMI Q8V979 C4 protein OS=Soybean crinkle leaf virus-...    81   3e-19
TR:Q8B6S4_TYCSV Q8B6S4 C4 protein OS=Tomato yellow leaf curl Sar...    81   3e-19
SP:AC4_BCTVC Q91J24 Protein C4 OS=Beet curly top virus (strain C...    81   3e-19
TR:D2N1S7_9GEMI D2N1S7 C4 protein OS=Ageratum enation virus GN=C...    81   3e-19
TR:B8ZWL3_9GEMI B8ZWL3 C4 protein OS=Pepper yellow vein Mali vir...    81   3e-19
TR:B5APR5_9GEMI B5APR5 AC4 OS=Ageratum enation virus - Lucknow P...    81   3e-19
TR:B5A458_9GEMI B5A458 AC4 protein OS=Ageratum enation virus GN=...    81   3e-19
TR:B5TEW3_9GEMI B5TEW3 AC4 OS=Sida micrantha mosaic virus - [Bra...    81   3e-19
TR:B2ZWE7_9GEMI B2ZWE7 AC4 protein OS=Tobacco mottle leaf curl v...    81   3e-19
SP:AC4_TYCS2 Q67621 Protein C4 OS=Tomato yellow leaf curl Sardin...    81   4e-19
SP:AC4_TYCS1 P38612 Protein C4 OS=Tomato yellow leaf curl Sardin...    81   4e-19
TR:B1PRH9_9GEMI B1PRH9 C4 protein OS=Ageratum yellow vein China ...    81   4e-19
TR:B0JFE3_9GEMI B0JFE3 AC4 protein OS=Ageratum yellow vein virus...    81   4e-19
TR:A5H175_9GEMI A5H175 AC4 protein OS=Sida yellow vein Vietnam v...    81   4e-19
TR:Q8V0I5_9GEMI Q8V0I5 C4 OS=Cotton leaf curl Gezira virus-[Okra...    81   4e-19
TR:C3VIS7_9GEMI C3VIS7 C4 Protein OS=Cotton leaf curl Gezira vir...    81   4e-19
TR:Q333I8_9GEMI Q333I8 Replication-associated protein (Fragment)...    84   4e-19
TR:Q333I6_9GEMI Q333I6 Replication-associated protein (Fragment)...    84   4e-19
TR:Q70PB9_9GEMI Q70PB9 AC4 protein OS=Sida micrantha mosaic viru...    80   5e-19
TR:O91200_9GEMI O91200 AC4 protein OS=Tomato mosaic Havana virus...    80   5e-19
TR:A5YKL5_9GEMI A5YKL5 AC4 OS=Malvastrum leaf curl virus GN=AC4 ...    80   5e-19
TR:A0FK19_9GEMI A0FK19 AC4 OS=Soybean blistering mosaic virus GN...    81   5e-19
TR:Q68UV0_9GEMI Q68UV0 AC4 protein OS=Tobacco leaf curl Yunnan v...    80   6e-19
TR:D5H3R7_9GEMI D5H3R7 AC4 protein OS=Malvastrum yellow vein Bao...    80   6e-19
TR:Q5W1N0_9GEMI Q5W1N0 AC4 protein OS=Ageratum leaf curl virus -...    80   6e-19
TR:Q5CCZ3_9GEMI Q5CCZ3 Putative C4 protein OS=Tomato leaf curl J...    80   9e-19
TR:Q5DVC5_9GEMI Q5DVC5 Putative AC4 protein OS=Tomato leaf curl ...    80   1e-18
TR:B5AG38_9GEMI B5AG38 C4 protein OS=Tomato leaf curl Kumasi vir...    80   1e-18
TR:Q7TGR0_9GEMI Q7TGR0 AC4 protein OS=Stachytarpheta leaf curl v...    80   1e-18
TR:Q2PDL2_9GEMI Q2PDL2 C4 protein OS=Tomato leaf curl Philippine...    80   1e-18
TR:Q9Z0A8_9GEMI Q9Z0A8 C4 protein OS=Tobacco leaf curl virus GN=...    79   1e-18
TR:E5KC00_9GEMI E5KC00 AC4 OS=Sida golden mosaic Braco virus-[Ja...    79   1e-18
TR:Q643X5_ICMV Q643X5 AC4 protein OS=Indian cassava mosaic virus...    79   2e-18
TR:Q0KFZ2_9GEMI Q0KFZ2 AC4 protein OS=Malvastrum leaf curl Guang...    79   2e-18
TR:A5H1D6_9GEMI A5H1D6 AC4 protein OS=Sida leaf curl virus GN=AC...    79   2e-18
TR:Q70PB4_9GEMI Q70PB4 AC4 protein OS=Sida micrantha mosaic viru...    79   2e-18
TR:E7CT25_9GEMI E7CT25 AC4 protein OS=Sida mosaic Bolivia virus ...    79   2e-18
TR:Q66UV6_TYCSV Q66UV6 Symptom expression protein OS=Tomato yell...    79   2e-18
TR:Q0GMH8_TYCSV Q0GMH8 C4 OS=Tomato yellow leaf curl Sardinia vi...    79   2e-18
TR:A2ICQ5_9GEMI A2ICQ5 C4 protein OS=Tomato leaf curl Arusha vir...    79   3e-18
TR:C3TU40_9GEMI C3TU40 AC4 OS=Bhendi yellow vein mosaic virus [2...    79   3e-18
TR:Q88952_TYCSV Q88952 C4 OS=Tomato yellow leaf curl Sardinia vi...    79   3e-18
TR:Q5XUM0_TYCSV Q5XUM0 C4 protein OS=Tomato yellow leaf curl Sar...    79   3e-18
TR:Q0KFW2_9GEMI Q0KFW2 AC4 protein OS=Tomato leaf curl Guangxi v...    79   4e-18
TR:Q5YB78_9GEMI Q5YB78 AC4 protein OS=Tomato leaf curl Guangdong...    78   4e-18
TR:D6Q1S1_9GEMI D6Q1S1 AC4 OS=Sida golden mottle virus GN=AC4 PE...    78   4e-18
TR:C1JYG8_9GEMI C1JYG8 AC4 protein OS=Malvastrum leaf curl virus...    78   4e-18
TR:B2X138_9GEMI B2X138 AC4 protein OS=Macroptilium yellow mosaic...    78   4e-18
TR:B1PRA7_9GEMI B1PRA7 C4 protein OS=Squash leaf curl Philippine...    78   4e-18
TR:A7KX28_9GEMI A7KX28 AC4 protein OS=Allamanda leaf curl virus ...    78   4e-18
TR:A5H172_9GEMI A5H172 AC4 protein OS=Mimosa yellow leaf curl vi...    78   4e-18
TR:E7BNN2_9GEMI E7BNN2 AC4 protein OS=Okra leaf curl India virus...    79   4e-18
TR:E7BNH8_9GEMI E7BNH8 AC4 protein OS=Okra enation leaf curl vir...    79   4e-18
TR:E7BNH2_9GEMI E7BNH2 AC4 protein OS=Okra enation leaf curl vir...    79   4e-18
TR:E7BNG6_9GEMI E7BNG6 AC4 protein OS=Okra enation leaf curl vir...    79   4e-18
TR:E7BNF4_9GEMI E7BNF4 AC4 protein OS=Okra enation leaf curl vir...    79   4e-18
TR:E7BNE8_9GEMI E7BNE8 AC4 protein OS=Okra enation leaf curl vir...    79   4e-18
TR:E7CT32_9GEMI E7CT32 AC4 protein OS=Sida mosaic Bolivia virus ...    78   4e-18
SP:AC4_ICMV Q08588 Protein AC4 OS=Indian cassava mosaic virus GN...    79   4e-18
TR:D3HIN0_9GEMI D3HIN0 Regulatory protein OS=Bhendi yellow vein ...    79   4e-18
TR:D3HIM8_9GEMI D3HIM8 Regulatory protein OS=Mesta yellow vein m...    79   4e-18
TR:Q8B5F1_9GEMI Q8B5F1 AC4 OS=Tomato yellow leaf curl Kanchanabu...    78   5e-18
TR:Q8B6X3_9GEMI Q8B6X3 C4 protein OS=Stachytarpheta leaf curl vi...    78   5e-18
TR:Q80S63_9GEMI Q80S63 C4 OS=Ageratum yellow vein virus-[Tomato]...    78   5e-18
TR:Q776V3_9GEMI Q776V3 AC4 protein OS=Stachytarpheta leaf curl v...    78   5e-18
TR:Q5CCZ7_9GEMI Q5CCZ7 Putative C4 protein OS=Ageratum yellow ve...    78   5e-18
TR:Q5CCX5_9GEMI Q5CCX5 Putative C4 protein OS=Ageratum yellow ve...    78   5e-18
TR:Q5CCW3_9GEMI Q5CCW3 Putative C4 protein OS=Ageratum yellow ve...    78   5e-18
TR:A6BM92_9GEMI A6BM92 C4 protein OS=Tomato leaf curl Philippine...    78   5e-18
TR:Q8V0J0_9GEMI Q8V0J0 C4 OS=Cotton leaf curl Gezira virus-[Okra...    78   5e-18
TR:Q8V0I7_9GEMI Q8V0I7 C4 OS=Cotton leaf curl Gezira virus-[Sida...    78   5e-18
TR:Q0ZD42_9GEMI Q0ZD42 C4 protein OS=Tomato leaf curl Arusha vir...    78   5e-18
TR:H8ZQN3_9GEMI H8ZQN3 AC4 protein OS=Centrosema yellow spot vir...    78   5e-18
TR:H2E6U9_9GEMI H2E6U9 C4 protein OS=Sauropus leaf curl virus GN...    78   5e-18
TR:B1PRF5_9GEMI B1PRF5 C4 protein OS=Squash leaf curl Philippine...    78   5e-18
TR:Q8B5F6_9GEMI Q8B5F6 AC4 OS=Tomato yellow leaf curl Kanchanabu...    78   5e-18
TR:E7BNG0_9GEMI E7BNG0 AC4 protein OS=Okra enation leaf curl vir...    78   5e-18
TR:B8YJC3_9GEMI B8YJC3 AC4 OS=Tomato yellow spot virus PE=4 SV=1       78   6e-18
TR:G0W2U6_9GEMI G0W2U6 AC4 protein OS=Mesta yellow vein mosaic v...    78   6e-18
TR:B1PRJ1_9GEMI B1PRJ1 C4 protein OS=Tomato leaf curl Cotabato v...    78   7e-18
TR:Q9Z0A6_9GEMI Q9Z0A6 C4 protein OS=Tobacco leaf curl virus GN=...    77   7e-18
TR:Q5RZ87_9GEMI Q5RZ87 Transcriptional regulator protein OS=Lind...    77   7e-18
TR:Q2L8C3_9GEMI Q2L8C3 AL4 OS=Tomato chino La Paz virus GN=AL4 P...    77   7e-18
TR:C3W964_9GEMI C3W964 AC4 protein OS=Malvastrum yellow vein Bao...    78   8e-18
TR:C0MHN6_9GEMI C0MHN6 Putative uncharacterized protein C4 OS=Co...    78   8e-18
TR:B1PIY6_9GEMI B1PIY6 C4 protein OS=Cotton leaf curl Gezira vir...    78   8e-18
TR:H2E6W1_9GEMI H2E6W1 C4 protein OS=Ageratum yellow vein virus ...    77   1e-17
TR:G8G2P1_9GEMI G8G2P1 AC4 protein OS=Cleome leaf crumple virus ...    77   1e-17
TR:G8G2N1_9GEMI G8G2N1 AC4 protein OS=Cleome leaf crumple virus ...    77   1e-17
TR:Q65321_9GEMI Q65321 C4 protein OS=Ageratum yellow vein virus ...    77   1e-17
TR:Q9Z0C3_9GEMI Q9Z0C3 C4 protein OS=Tobacco leaf curl virus GN=...    77   1e-17
TR:B2X0G9_9GEMI B2X0G9 AC4 protein OS=Macroptilium yellow mosaic...    77   1e-17
TR:D1GZ47_9GEMI D1GZ47 C4 protein OS=Cotton leaf curl Gezira vir...    77   1e-17
TR:Q0KFY6_9GEMI Q0KFY6 AC4 protein OS=Malvastrum leaf curl Guang...    77   1e-17
TR:B2LUM0_9GEMI B2LUM0 AC4 protein OS=Pepper leaf curl Yunnan vi...    77   1e-17
TR:Q09M15_9GEMI Q09M15 AC4 OS=Squash leaf curl Philippines virus...    77   1e-17
TR:D3TIA4_SLCV D3TIA4 AC4 protein OS=Squash leaf curl virus GN=A...    77   1e-17
TR:A9YY93_9GEMI A9YY93 AC4 OS=Squash leaf curl Philippines virus...    77   1e-17
TR:A7L393_9GEMI A7L393 AC4 protein OS=Macroptilium golden mosaic...    77   1e-17
TR:Q09M27_9GEMI Q09M27 AC4 OS=Ageratum yellow vein Hualian virus...    77   2e-17
TR:G8G2Q1_9GEMI G8G2Q1 AC4 protein OS=Cleome leaf crumple virus ...    77   2e-17
TR:Q7T5U2_9GEMI Q7T5U2 AL4 protein OS=Tomato chino La Paz virus ...    76   2e-17
TR:Q91R09_9GEMI Q91R09 AC4 protein OS=Tomato severe rugose virus...    76   2e-17
TR:E0Z5Q7_9GEMI E0Z5Q7 AC4 OS=Cleome leaf crumple virus GN=AC4 P...    76   3e-17
TR:Q2L8C5_9GEMI Q2L8C5 AL4 OS=Tomato chino La Paz virus GN=AL4 P...    76   3e-17
TR:A5H1A8_9GEMI A5H1A8 AC4 protein OS=Lindernia anagallis yellow...    76   3e-17
TR:C0L9F9_9GEMI C0L9F9 C4 OS=Tomato leaf curl Togo virus-[Togo:2...    76   3e-17
TR:B3GNA0_9GEMI B3GNA0 AC4 OS=Tomato leaf distortion virus GN=AC...    76   3e-17
TR:G8G2J6_9GEMI G8G2J6 AC4 protein OS=Cleome leaf crumple virus ...    76   4e-17
TR:G3FNI6_9GEMI G3FNI6 AC4 protein OS=Squash leaf curl Philippin...    75   4e-17
TR:A3RDQ4_9GEMI A3RDQ4 C4 protein OS=Pumpkin yellow mosaic Malay...    75   4e-17
TR:H9NHG7_9GEMI H9NHG7 AC4 OS=Clerodendrum golden mosaic China v...    75   6e-17
TR:B1PRJ7_9GEMI B1PRJ7 C4 protein OS=Tomato leaf curl Cotabato v...    75   6e-17
TR:G8G2M6_9GEMI G8G2M6 AC4 protein OS=Cleome leaf crumple virus ...    75   6e-17
TR:Q3S3V9_9GEMI Q3S3V9 AC4 protein OS=Tomato yellow leaf curl Ka...    75   6e-17
TR:Q2WCL4_9GEMI Q2WCL4 AC4 protein OS=Sida leaf curl virus GN=AC...    75   6e-17
TR:E7BPI8_9GEMI E7BPI8 AC4 protein OS=Bhendi yellow vein India v...    75   6e-17
TR:E7BNL2_9GEMI E7BNL2 AC4 protein OS=Bhendi yellow vein mosaic ...    75   6e-17
TR:C3TUK8_9GEMI C3TUK8 AC4 OS=Bhendi yellow vein mosaic virus GN...    75   6e-17
TR:A5H1E5_9GEMI A5H1E5 AC4 protein OS=Sida leaf curl virus GN=AC...    75   6e-17
TR:H2E1I8_9GEMI H2E1I8 AC4 protein OS=Tomato Chino La Paz virus ...    75   9e-17
TR:D7FAZ4_9GEMI D7FAZ4 AC4 protein OS=Cleome leaf crumple virus ...    75   1e-16
TR:Q5DVB9_9GEMI Q5DVB9 Putative AC4 protein OS=Tomato leaf curl ...    75   1e-16
TR:H8ZQS3_9GEMI H8ZQS3 AC4 protein OS=Macroptilium yellow spot v...    74   1e-16
TR:Q17ZQ7_9GEMI Q17ZQ7 C4 protein OS=Sida yellow vein Madurai vi...    74   2e-16
TR:Q8JNH0_9GEMI Q8JNH0 Putative uncharacterized protein AC4 OS=M...    74   2e-16
TR:A5H163_9GEMI A5H163 AC4 protein OS=Spilanthes yellow vein vir...    74   2e-16
TR:Q9IET3_9GEMI Q9IET3 AC1 protein (Fragment) OS=Cotton leaf cur...    79   2e-16
TR:G9CM36_9GEMI G9CM36 AC4 protein OS=Asystasia begomovirus 2 GN...    74   2e-16
TR:D2N1T3_9GEMI D2N1T3 AC4 protein OS=Ageratum enation virus GN=...    74   2e-16
TR:Q32V59_9GEMI Q32V59 AC4 OS=Cotton leaf curl Rajasthan virus -...    74   3e-16
TR:E1Y7F6_9GEMI E1Y7F6 C4 protein OS=Bhendi yellow vein mosaic v...    74   3e-16
TR:H1ZWP5_9GEMI H1ZWP5 AC4 protein OS=Hollyhock leaf curl virus ...    74   3e-16
TR:Q70P36_9GEMI Q70P36 AC4 protein OS=Ageratum yellow vein China...    74   3e-16
TR:Q09M57_9GEMI Q09M57 AC4 OS=Tomato leaf curl Taiwan virus GN=A...    73   4e-16
TR:D7FB08_9GEMI D7FB08 AC4 protein OS=Sida micrantha mosaic viru...    73   4e-16
TR:A1YKZ2_9GEMI A1YKZ2 AC4 OS=Tomato mosaic Havana virus GN=AC4 ...    73   4e-16
TR:E7BPY5_9GEMI E7BPY5 AC4 protein OS=Bhendi yellow vein mosaic ...    74   4e-16
TR:E7BPX1_9GEMI E7BPX1 AC4 protein OS=Bhendi yellow vein mosaic ...    74   4e-16
TR:E7BPW4_9GEMI E7BPW4 AC4 protein OS=Bhendi yellow vein mosaic ...    74   4e-16
TR:E7BPV7_9GEMI E7BPV7 AC4 protein OS=Bhendi yellow vein mosaic ...    74   4e-16
TR:E7BNK6_9GEMI E7BNK6 AC4 protein OS=Bhendi yellow vein mosaic ...    74   4e-16
TR:D2U4X9_9GEMI D2U4X9 AC4 protein OS=Cotton leaf curl Kokhran v...    74   4e-16
TR:H8ZQT7_9GEMI H8ZQT7 AC4 protein OS=Macroptilium yellow spot v...    73   4e-16
TR:E3VQ44_9GEMI E3VQ44 AC4 OS=Tobacco leaf curl Pusa virus GN=AC...    73   5e-16
TR:D5LNI6_TYCSV D5LNI6 C4 protein OS=Tomato yellow leaf curl Sar...    73   5e-16
TR:C3UP40_9GEMI C3UP40 AC4 OS=Malvastrum yellow mosaic Jamaica v...    73   5e-16
TR:D2U4U9_9GEMI D2U4U9 AC4 protein OS=Cotton leaf curl Shadadpur...    73   5e-16
TR:B0I527_9GEMI B0I527 C4 protein OS=Tomato leaf curl Philippine...    73   7e-16
TR:A3RLV3_9GEMI A3RLV3 AC4 OS=Mesta yellow vein mosaic virus - [...    73   7e-16
TR:A3FF37_9GEMI A3FF37 Transcriptional regulator protein OS=Mest...    73   7e-16
TR:B6DRW9_9GEMI B6DRW9 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
TR:B6DRW2_9GEMI B6DRW2 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
TR:B6DRV5_9GEMI B6DRV5 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
TR:B6DRT4_9GEMI B6DRT4 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
TR:B6DRS7_9GEMI B6DRS7 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
TR:B6DRS0_9GEMI B6DRS0 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
TR:B6DRR3_9GEMI B6DRR3 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
TR:B6DRQ6_9GEMI B6DRQ6 Regulatory protein OS=Mesta yellow vein m...    73   8e-16
SP:AC4_BGYMV P0C6G0 Protein AC4 OS=Bean golden yellow mosaic vir...    72   9e-16
SP:AC4_TYCSV P27272 Protein C4 OS=Tomato yellow leaf curl Sardin...    72   1e-15
TR:D8UVY6_9GEMI D8UVY6 AC4 OS=Okra leaf curl virus GN=AC4 PE=4 SV=1    72   1e-15
TR:A2TGX2_9GEMI A2TGX2 AC4 protein OS=Squash leaf curl Philippin...    72   1e-15
TR:D3UTA4_9GEMI D3UTA4 C4 protein OS=Tomato leaf curl Namakely v...    72   1e-15
TR:C3TU33_9GEMI C3TU33 AC4 OS=Bhendi yellow vein mosaic virus [2...    72   1e-15
TR:B7ZER7_9GEMI B7ZER7 C4 protein OS=Pedilanthus leaf curl virus...    72   1e-15
TR:Q8QPV2_9GEMI Q8QPV2 Putative AC4 protein OS=Tomato chlorotic ...    72   1e-15
TR:H6UX03_9GEMI H6UX03 AC4 protein OS=Papaya leaf curl virus GN=...    72   1e-15
TR:D9ZFY6_9GEMI D9ZFY6 AC4 protein OS=Sida golden mosaic Florida...    72   1e-15
TR:C5H8H0_9GEMI C5H8H0 C4 protein OS=Sweet potato leaf curl Spai...    72   1e-15
TR:O72725_9GEMI O72725 AC4 protein OS=Cotton leaf curl Multan vi...    72   1e-15
TR:G0T4T7_9GEMI G0T4T7 C4 OS=Eclipta yellow vein virus PE=4 SV=1       72   1e-15
TR:G9CM41_9GEMI G9CM41 AC4 protein OS=Tomato golden mosaic virus...    72   1e-15
TR:C5J9K6_9GEMI C5J9K6 AC4 protein OS=Ramie mosaic virus GN=AC4 ...    71   2e-15
SP:AC4_TGMVY P0C2W9 Protein AC4 OS=Tomato golden mosaic virus (s...    71   2e-15
TR:C0MHM8_9GEMI C0MHM8 Putative uncharacterized protein C4 OS=Ok...    71   2e-15
TR:B8Y665_9GEMI B8Y665 AC4 OS=Euphorbia leaf curl virus GN=AC4 P...    71   2e-15
TR:E7BPQ8_9GEMI E7BPQ8 AC4 protein OS=Bhendi yellow vein mosaic ...    72   2e-15
TR:Q5DVB3_9GEMI Q5DVB3 Putative AC4 protein OS=Tomato leaf curl ...    73   2e-15
TR:G9CM48_9GEMI G9CM48 AC4 protein OS=Tomato golden mosaic virus...    71   2e-15
TR:Q8V379_9GEMI Q8V379 AC4 protein OS=East African cassava mosai...    71   3e-15
TR:Q776Y2_9GEMI Q776Y2 Transcriptional regulator protein OS=East...    71   3e-15
TR:Q2A8L8_9GEMI Q2A8L8 AC4 protein OS=East African cassava mosai...    71   3e-15
TR:Q2A8H0_9GEMI Q2A8H0 AC4 protein OS=East African cassava mosai...    71   3e-15
TR:H6B8W1_9GEMI H6B8W1 C4 protein OS=Cotton leaf curl Rajasthan ...    71   3e-15
TR:E7BQ13_9GEMI E7BQ13 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BQ06_9GEMI E7BQ06 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPZ2_9GEMI E7BPZ2 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPT6_9GEMI E7BPT6 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPS9_9GEMI E7BPS9 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPS2_9GEMI E7BPS2 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPR5_9GEMI E7BPR5 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPQ1_9GEMI E7BPQ1 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPP4_9GEMI E7BPP4 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPN7_9GEMI E7BPN7 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPM3_9GEMI E7BPM3 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BPK9_9GEMI E7BPK9 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:E7BNM6_9GEMI E7BNM6 AC4 protein OS=Bhendi yellow vein India v...    71   3e-15
TR:E7BNJ9_9GEMI E7BNJ9 AC4 protein OS=Bhendi yellow vein mosaic ...    71   3e-15
TR:B8YB85_9GEMI B8YB85 AC4 OS=Bhendi yellow vein Delhi virus [20...    71   3e-15
TR:H8ZQU8_9GEMI H8ZQU8 AC4 protein OS=Macroptilium yellow spot v...    71   3e-15
TR:O56819_9GEMI O56819 C4 protein OS=Chayote yellow mosaic virus...    70   4e-15
TR:E5CYF1_9GEMI E5CYF1 C4 OS=Sweet potato begomovirus GN=C4 PE=4...    70   4e-15
TR:E5CYE7_9GEMI E5CYE7 C4 OS=Sweet potato begomovirus GN=C4 PE=4...    70   4e-15
TR:D7FB15_9GEMI D7FB15 AC4 protein OS=Sida micrantha mosaic viru...    70   4e-15
TR:D4HSA0_9GEMI D4HSA0 C4 OS=Sweet potato golden vein associated...    70   4e-15
TR:Q6JIB3_9GEMI Q6JIB3 C4 protein OS=Cotton leaf curl Kokhran vi...    71   4e-15
TR:D2U4X3_9GEMI D2U4X3 AC4 protein OS=Cotton leaf curl Shadadpur...    71   4e-15
TR:A7DXL0_9GEMI A7DXL0 C4 protein OS=Tomato leaf curl Namakely v...    71   4e-15
TR:Q06F27_9GEMI Q06F27 C4 protein OS=Okra yellow crinkle virus G...    70   4e-15
TR:Q9IWB2_9GEMI Q9IWB2 C4 protein OS=Cotton leaf curl Multan vir...    70   5e-15
TR:Q5CCY9_9GEMI Q5CCY9 Putative C4 protein OS=Tomato leaf curl J...    70   5e-15
TR:Q09M21_9GEMI Q09M21 AC4 OS=Ageratum yellow vein virus-[Taiwan...    70   5e-15
TR:A8CFD9_9GEMI A8CFD9 C4 protein OS=Ageratum yellow vein virus-...    70   5e-15
TR:A7KRP0_9GEMI A7KRP0 AC4 OS=Ageratum yellow vein Taiwan virus ...    70   5e-15
TR:A5A4R9_9GEMI A5A4R9 AC4 OS=Ageratum yellow vein virus GN=AC4 ...    70   5e-15
TR:B6DRU8_9GEMI B6DRU8 Regulatory protein OS=Mesta yellow vein m...    71   6e-15
TR:B6DRU1_9GEMI B6DRU1 Regulatory protein OS=Mesta yellow vein m...    71   6e-15
TR:B1PAJ0_9GEMI B1PAJ0 AC4 OS=Mesta yellow vein mosaic Bahraich ...    71   6e-15
TR:B6V8L6_9GEMI B6V8L6 AC4 protein OS=Mesta yellow vein mosaic v...    70   6e-15
TR:B6V8K9_9GEMI B6V8K9 AC4 protein OS=Mesta yellow vein mosaic v...    70   6e-15
TR:B6V8K2_9GEMI B6V8K2 AC4 protein OS=Mesta yellow vein mosaic v...    70   6e-15
TR:C5J9H1_9GEMI C5J9H1 AC4 protein OS=Clerodendrum golden mosaic...    70   8e-15
TR:A7LID6_9GEMI A7LID6 C4 OS=Okra leaf curl virus-[Mali] GN=C4 P...    70   8e-15
TR:A7LID0_9GEMI A7LID0 C4 OS=Okra yellow crinkle virus-[Mali] GN...    70   8e-15
TR:E7BPV0_9GEMI E7BPV0 AC4 protein OS=Bhendi yellow vein mosaic ...    70   8e-15
TR:E7BNI5_9GEMI E7BNI5 AC4 protein OS=Cotton leaf curl Bangalore...    70   8e-15
TR:A7DXI4_9GEMI A7DXI4 C4 protein OS=Tomato leaf curl Comoros vi...    70   8e-15
TR:A4D8I5_9GEMI A4D8I5 C4 protein OS=Okra yellow crinkle virus G...    70   9e-15
TR:Q9Z0C7_9GEMI Q9Z0C7 C4 protein OS=Tobacco leaf curl virus GN=...    70   9e-15
TR:Q9Z0B0_9GEMI Q9Z0B0 C4 protein OS=Tobacco leaf curl virus GN=...    70   9e-15
TR:Q8B3K9_9GEMI Q8B3K9 Putative AC4 protein OS=Eupatorium yellow...    70   9e-15
TR:D4HSA6_9GEMI D4HSA6 C4 OS=Sweet potato mosaic associated viru...    70   1e-14
TR:B1PRG1_9GEMI B1PRG1 C4 protein OS=Tomato leaf curl Cebu virus...    70   1e-14
TR:B1PR59_9GEMI B1PR59 C4 protein OS=Tomato leaf curl Cebu virus...    70   1e-14
TR:A4VAR5_9GEMI A4VAR5 AC4 protein OS=Malvastrum leaf curl Guang...    70   1e-14
TR:B3GNB5_9GEMI B3GNB5 AC4 OS=Tomato mild mosaic virus GN=AC4 PE...    69   1e-14
TR:H8YHS6_9GEMI H8YHS6 C4 protein OS=Cotton leaf curl Rajasthan ...    70   1e-14
TR:H8YHQ1_9GEMI H8YHQ1 C4 protein OS=Cotton leaf curl Rajasthan ...    70   1e-14
TR:E7BPZ9_9GEMI E7BPZ9 AC4 protein OS=Bhendi yellow vein mosaic ...    70   1e-14
TR:E7BNL9_9GEMI E7BNL9 AC4 protein OS=Bhendi yellow vein India v...    70   1e-14
TR:H1ZWN9_9GEMI H1ZWN9 AC4 protein OS=Hollyhock yellow vein mosa...    70   1e-14
TR:B1PRI5_9GEMI B1PRI5 C4 protein OS=Tomato leaf curl Mindanao v...    69   2e-14
TR:Q77CF6_9GEMI Q77CF6 AC4 protein OS=Cotton leaf curl Kokhran v...    69   2e-14
TR:Q777H7_9GEMI Q777H7 Transcriptional regulator protein OS=Cott...    69   2e-14
TR:Q5DVA8_9GEMI Q5DVA8 Putative AC4 protein OS=Tomato leaf curl ...    69   2e-14
TR:Q32V71_9GEMI Q32V71 AC4 OS=Cotton leaf curl Rajasthan virus -...    69   2e-14
TR:Q32V65_9GEMI Q32V65 AC4 OS=Cotton leaf curl Rajasthan virus -...    69   2e-14
TR:O73581_9GEMI O73581 AC4 protein OS=Cotton leaf curl Kokhran v...    69   2e-14
TR:I1SZG5_9GEMI I1SZG5 Ac4 protein OS=Cotton leaf curl virus GN=...    69   2e-14
TR:I1SZF8_9GEMI I1SZF8 Ac4 protein OS=Cotton leaf curl virus GN=...    69   2e-14
TR:I1SZD0_9GEMI I1SZD0 Ac4 protein OS=Cotton leaf curl virus GN=...    69   2e-14
TR:H8YHS0_9GEMI H8YHS0 C4 protein OS=Cotton leaf curl Rajasthan ...    69   2e-14
TR:H8YHR4_9GEMI H8YHR4 C4 protein OS=Cotton leaf curl Rajasthan ...    69   2e-14
TR:H6B8W7_9GEMI H6B8W7 C4 protein OS=Cotton leaf curl Rajasthan ...    69   2e-14
TR:G9B5D7_9GEMI G9B5D7 Transcriptional regulator protein OS=Cott...    69   2e-14
TR:F2WUA5_9GEMI F2WUA5 Transcriptional regulator protein OS=Cott...    69   2e-14
TR:D3HIK5_9GEMI D3HIK5 Regulatory protein OS=Cotton leaf curl Ra...    69   2e-14
TR:C6KHW9_9GEMI C6KHW9 AC4 protein OS=Cotton leaf curl Rajasthan...    69   2e-14
TR:B9TVG0_9GEMI B9TVG0 AC4 OS=Cotton leaf curl Rajasthan virus G...    69   2e-14
TR:A9LJZ5_9GEMI A9LJZ5 AC4 OS=Radish leaf curl virus GN=AC4 PE=4...    69   2e-14
TR:A8Y825_9GEMI A8Y825 C4 protein OS=Cotton leaf curl Rajasthan ...    69   2e-14
TR:I1V8L7_9GEMI I1V8L7 AC4 OS=Tomato leaf curl New Delhi virus G...    69   2e-14
TR:Q09M39_9GEMI Q09M39 AC4 OS=Tomato leaf curl Hsinchu virus - [...    68   2e-14
TR:Q3L1B2_9GEMI Q3L1B2 AC4 OS=Cotton leaf curl Rajasthan virus -...    69   2e-14
TR:Q2A8H6_9GEMI Q2A8H6 AC4 protein OS=East African cassava mosai...    69   2e-14
TR:Q2A875_9GEMI Q2A875 AC4 protein OS=East African cassava mosai...    69   2e-14
TR:O73497_9GEMI O73497 AC4 protein OS=Okra yellow vein mosaic vi...    69   2e-14
TR:E7BPN0_9GEMI E7BPN0 AC4 protein OS=Bhendi yellow vein mosaic ...    69   2e-14
TR:D2U4W7_9GEMI D2U4W7 AC4 protein OS=Cotton leaf curl Shadadpur...    69   2e-14
TR:C3TUM2_9GEMI C3TUM2 AC4 OS=Bhendi yellow vein mosaic virus GN...    69   2e-14
TR:Q80S69_9GEMI Q80S69 C4 OS=Tomato leaf curl Java virus GN=C4 P...    69   2e-14
TR:C1KG79_9GEMI C1KG79 AC4 protein OS=Tomato severe rugose virus...    69   2e-14
TR:B2M0Y3_9GEMI B2M0Y3 AC4 protein OS=Tomato severe rugose virus...    69   2e-14
TR:I0C069_9GEMI I0C069 C4 protein OS=Hollyhock yellow vein mosai...    69   3e-14
TR:B0FDG8_TYCSV B0FDG8 C4 (Fragment) OS=Tomato yellow leaf curl ...    68   3e-14
TR:H8WR51_9GEMI H8WR51 AC4 protein (Fragment) OS=Cassava mosaic ...    68   3e-14
TR:F8LG95_9GEMI F8LG95 C4 protein OS=Ageratum leaf curl Cameroon...    69   3e-14
TR:F8LG89_9GEMI F8LG89 C4 protein OS=Ageratum leaf curl Cameroon...    69   3e-14
TR:F8LG83_9GEMI F8LG83 C4 protein OS=Ageratum leaf curl Cameroon...    69   3e-14
TR:E3W7F5_9GEMI E3W7F5 Putative uncharacterized protein C4 OS=Ag...    69   3e-14
TR:C5J9J8_9GEMI C5J9J8 AC4 protein OS=Ramie mosaic virus GN=AC4 ...    67   4e-14
TR:B3GNB0_9GEMI B3GNB0 AC4 OS=Sida common mosaic virus GN=AC4 PE...    68   4e-14
TR:Q5CCY2_9GEMI Q5CCY2 Putative C4 protein OS=Pepper yellow leaf...    68   4e-14
TR:B8Y8D3_9GEMI B8Y8D3 AC4 OS=Papaya leaf curl Guangdong virus -...    68   4e-14
TR:Q2A8K6_9GEMI Q2A8K6 AC4 protein OS=East African cassava mosai...    68   5e-14
TR:E7CT39_9GEMI E7CT39 AC4 protein OS=Abutilon mosaic Bolivia vi...    68   5e-14
TR:Q99AT2_9GEMI Q99AT2 AC4 OS=Cotton leaf curl Rajasthan virus G...    68   5e-14
TR:I1SZF1_9GEMI I1SZF1 Ac4 protein OS=Cotton leaf curl virus GN=...    68   5e-14
TR:E7BPU3_9GEMI E7BPU3 AC4 protein OS=Bhendi yellow vein mosaic ...    68   5e-14
TR:C4PLB7_9GEMI C4PLB7 AC4 protein OS=Cotton leaf curl Rajasthan...    68   5e-14
TR:B9TVE2_9GEMI B9TVE2 AC4 OS=Cotton leaf curl Burewala virus GN...    68   5e-14
TR:Q70P30_9GEMI Q70P30 AC4 protein OS=Euphorbia leaf curl virus ...    68   6e-14
TR:Q2LKY3_9GEMI Q2LKY3 C4 protein OS=Tomato leaf curl Philippine...    68   6e-14
TR:B1PR65_9GEMI B1PR65 C4 protein OS=Tomato leaf curl Philippine...    68   6e-14
TR:Q8V0I0_9GEMI Q8V0I0 C4 OS=Hollyhock leaf crumple virus-[Cairo...    68   6e-14
TR:C4PLB0_9GEMI C4PLB0 AC4 protein OS=Tomato leaf curl Pakistan ...    68   7e-14
TR:D4NXN1_9GEMI D4NXN1 AC4 protein OS=Cotton leaf curl virus LKO...    68   7e-14
TR:C1IW24_9GEMI C1IW24 AC4 protein OS=Tomato leaf curl Patna vir...    68   7e-14
TR:B1PRD7_9GEMI B1PRD7 C4 protein OS=Tomato leaf curl Philippine...    67   9e-14
TR:B1PR89_9GEMI B1PR89 C4 protein OS=Tomato leaf curl Philippine...    67   9e-14
TR:B5B3X3_9GEMI B5B3X3 AC4 OS=Tomato leaf curl Kerala virus GN=A...    67   9e-14
TR:Q2A8K0_9GEMI Q2A8K0 AC4 protein OS=East African cassava mosai...    67   9e-14
TR:C3UP45_9GEMI C3UP45 AC4 OS=Malvastrum yellow mosaic Helshire ...    67   9e-14
TR:H6B8T7_9GEMI H6B8T7 C4 protein OS=Cotton leaf curl Burewala v...    69   1e-13
TR:Q8B982_9GEMI Q8B982 AC4 protein (Fragment) OS=Cotton leaf cur...    66   2e-13
TR:Q2A8L2_9GEMI Q2A8L2 AC4 protein OS=East African cassava mosai...    66   2e-13
TR:H6B909_9GEMI H6B909 C4 protein OS=Cotton leaf curl Rajasthan ...    67   2e-13
TR:Q3HM66_9GEMI Q3HM66 AC4 protein OS=Tomato severe rugose virus...    66   2e-13
TR:B1PRB9_9GEMI B1PRB9 C4 protein OS=Tomato leaf curl Philippine...    66   3e-13
TR:Q2A8G4_9GEMI Q2A8G4 AC4 protein OS=East African cassava mosai...    66   3e-13
TR:Q3L1A5_9GEMI Q3L1A5 AC4 OS=Cotton leaf curl Multan virus - [D...    66   3e-13
TR:Q3L199_9GEMI Q3L199 AC4 OS=Cotton leaf curl Multan virus - [L...    66   3e-13
TR:H6VTU0_9GEMI H6VTU0 C4 protein OS=Cotton leaf curl Multan vir...    66   3e-13
TR:H2E1M3_9GEMI H2E1M3 Regulatory protein OS=Cotton leaf curl Mu...    66   3e-13
TR:E7BPX8_9GEMI E7BPX8 AC4 protein OS=Bhendi yellow vein mosaic ...    66   3e-13
TR:B9TVE8_9GEMI B9TVE8 AC4 OS=Cotton leaf curl Burewala virus GN...    66   3e-13
TR:B8Q6T7_9GEMI B8Q6T7 AC4 OS=Cotton leaf curl Burewala virus GN...    66   3e-13
TR:B8Q6S5_9GEMI B8Q6S5 AC4 OS=Cotton leaf curl Multan virus GN=A...    66   3e-13
TR:G4XFW8_9GEMI G4XFW8 C4 OS=Tomato severe rugose virus PE=4 SV=1      66   3e-13
TR:Q8B981_9GEMI Q8B981 AC4 protein (Fragment) OS=Cotton leaf cur...    65   3e-13
TR:C3VIY6_9GEMI C3VIY6 AC4 OS=Papaya leaf curl Guangdong virus G...    66   4e-13
TR:B1PRE3_9GEMI B1PRE3 C4 protein OS=Tomato leaf curl Philippine...    66   4e-13
TR:B1PR46_9GEMI B1PR46 C4 protein OS=Tomato leaf curl virus GN=C...    66   4e-13
TR:H6B8X9_9GEMI H6B8X9 C4 protein OS=Cotton leaf curl Rajasthan ...    66   4e-13
TR:B8Q6U3_9GEMI B8Q6U3 AC4 OS=Cotton leaf curl Burewala virus GN...    66   4e-13
TR:H2D714_9GEMI H2D714 AC4 protein OS=Tomato severe mottle Argen...    65   4e-13
TR:Q8B983_9GEMI Q8B983 AC4 protein (Fragment) OS=Cotton leaf cur...    65   5e-13
TR:A4HR61_9GEMI A4HR61 C4 protein (Fragment) OS=Tomato yellow le...    65   5e-13
TR:A4HR57_9GEMI A4HR57 C4 protein (Fragment) OS=Tomato yellow le...    65   5e-13
TR:A4HR53_9GEMI A4HR53 C4 protein (Fragment) OS=Tomato yellow le...    65   5e-13
TR:A4HR49_9GEMI A4HR49 C4 protein (Fragment) OS=Tomato yellow le...    65   5e-13
TR:A4HQW1_9GEMI A4HQW1 C4 protein (Fragment) OS=Tomato yellow le...    65   5e-13
TR:B1PR83_9GEMI B1PR83 C4 protein OS=Tomato leaf curl Philippine...    65   5e-13
TR:Q9YYT6_9GEMI Q9YYT6 Putative uncharacterized protein OS=Holly...    65   5e-13
TR:Q0R4R2_9GEMI Q0R4R2 C4 OS=Tomato leaf curl Pakistan virus PE=...    65   5e-13
TR:Q3L1B8_9GEMI Q3L1B8 AC4 OS=Cotton leaf curl Multan virus - [H...    65   6e-13
TR:G4XFY3_9GEMI G4XFY3 C4 OS=Tomato severe rugose virus PE=4 SV=1      65   6e-13
TR:F4MJ97_9GEMI F4MJ97 C4 OS=Tomato yellow leaf curl virus PE=4 ...    65   7e-13
TR:B2LYQ8_9GEMI B2LYQ8 AC4 OS=Ramie mosaic virus GN=AC4 PE=4 SV=1      64   7e-13
TR:B6DP81_9GEMI B6DP81 AC4 protein OS=Clerodendrum golden mosaic...    65   7e-13
TR:E7BM80_9GEMI E7BM80 C4 protein OS=Tomato yellow leaf curl vir...    65   7e-13
TR:E7BM74_9GEMI E7BM74 C4 protein OS=Tomato yellow leaf curl vir...    65   7e-13
TR:H2E1L2_9GEMI H2E1L2 Regulatory protein OS=Cotton leaf curl Mu...    65   8e-13
TR:B9VQ06_9GEMI B9VQ06 AC4 OS=Bhendi yellow vein Bhubhaneswar vi...    65   8e-13
TR:B4YPN8_9GEMI B4YPN8 C4 protein OS=Tomato yellow leaf curl vir...    65   8e-13
TR:Q8B984_9GEMI Q8B984 AC4 protein (Fragment) OS=Cotton leaf cur...    64   8e-13
TR:G4XFX8_9GEMI G4XFX8 C4 OS=Tomato severe rugose virus PE=4 SV=1      65   8e-13
TR:Q8B6R0_9GEMI Q8B6R0 C4 OS=Tomato leaf curl Philippines virus ...    65   1e-12
TR:D2DJ45_9GEMI D2DJ45 AC4 OS=Bhendi yellow vein Haryana virus [...    65   1e-12
TR:A5HDW8_9GEMI A5HDW8 AC4 OS=Tomato golden mottle virus GN=AC4 ...    65   1e-12
TR:Q3HW40_9GEMI Q3HW40 AC4 OS=Cotton leaf curl Multan virus - [B...    65   1e-12

>SP:AC4_ABMVW P0C6F9 Protein AC4 OS=Abutilon mosaic virus (isolate West India)
          GN=AC4 PE=3 SV=1
          Length = 79

 Score =  112 bits (280), Expect = 9e-32
 Identities = 64/83 (77%), Positives = 64/83 (77%), Gaps = 19/83 (22%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNARITDSSIWSPQPGQHISIQ     TYRELNPAPTSSPTSTRTEIQL
Sbjct: 6  SKAN-------TNARITDSSIWSPQPGQHISIQ-----TYRELNPAPTSSPTSTRTEIQL 53

Query: 61 NGENSRSTADLP-------MIHM 76
          NGENSRSTADLP       MIHM
Sbjct: 54 NGENSRSTADLPGEANRLLMIHM 76


>TR:Q9J050_9GEMI Q9J050 Putative uncharacterized protein AC4 OS=Chino del tomate
          virus-[H8] GN=AC4 PE=4 SV=1
          Length = 87

 Score =  102 bits (255), Expect = 7e-28
 Identities = 52/61 (85%), Positives = 55/61 (90%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEIQL+GENSRSTAD 
Sbjct: 18 TSARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIQLSGENSRSTADQ 72

Query: 72 P 72
          P
Sbjct: 73 P 73


>TR:Q9J048_9GEMI Q9J048 Putative uncharacterized protein AC4 OS=Chino del tomate
          virus-[H6] GN=AC4 PE=4 SV=1
          Length = 87

 Score =  102 bits (255), Expect = 7e-28
 Identities = 52/61 (85%), Positives = 55/61 (90%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEIQL+GENSRSTAD 
Sbjct: 18 TSARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIQLSGENSRSTADQ 72

Query: 72 P 72
          P
Sbjct: 73 P 73


>TR:Q09KA3_9GEMI Q09KA3 AC4 protein OS=Chino del tomate virus-[RK] GN=AC4 PE=4
          SV=1
          Length = 87

 Score =  102 bits (255), Expect = 7e-28
 Identities = 52/61 (85%), Positives = 55/61 (90%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEIQL+GENSRSTAD 
Sbjct: 18 TSARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIQLSGENSRSTADQ 72

Query: 72 P 72
          P
Sbjct: 73 P 73


>TR:E7E1J4_9GEMI E7E1J4 PTGS suppressor OS=Abutilon mosaic virus GN=AC4 PE=4 SV=1
          Length = 85

 Score =  102 bits (254), Expect = 9e-28
 Identities = 59/80 (73%), Positives = 61/80 (76%), Gaps = 15/80 (18%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          N +AN   T+ARITDSSIWSPQPGQHISIQ     TYRELNPAPTSSPT TRT IQLNGE
Sbjct: 11 NSKAN---TDARITDSSIWSPQPGQHISIQ-----TYRELNPAPTSSPTLTRTVIQLNGE 62

Query: 64 NSRSTAD-------LPMIHM 76
          NSRSTAD       L MIHM
Sbjct: 63 NSRSTADLLGEANRLLMIHM 82


>TR:E7E1I8_9GEMI E7E1I8 PTGS suppressor OS=Abutilon mosaic virus GN=AC4 PE=4 SV=1
          Length = 85

 Score =  102 bits (254), Expect = 9e-28
 Identities = 59/80 (73%), Positives = 61/80 (76%), Gaps = 15/80 (18%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          N +AN   T+ARITDSSIWSPQPGQHISIQ     TYRELNPAPTSSPT TRT IQLNGE
Sbjct: 11 NSKAN---TDARITDSSIWSPQPGQHISIQ-----TYRELNPAPTSSPTLTRTVIQLNGE 62

Query: 64 NSRSTAD-------LPMIHM 76
          NSRSTAD       L MIHM
Sbjct: 63 NSRSTADLLGEANRLLMIHM 82


>TR:G8XR45_9GEMI G8XR45 AC4 protein OS=Tomato begomovirus - [Cuba:Granma:2007]
          GN=AC4 PE=4 SV=1
          Length = 87

 Score =  102 bits (254), Expect = 1e-27
 Identities = 56/72 (77%), Positives = 57/72 (79%), Gaps = 12/72 (16%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD- 70
          TNARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEI  NGENSRSTAD 
Sbjct: 18 TNARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIHWNGENSRSTADL 72

Query: 71 ------LPMIHM 76
                L MIHM
Sbjct: 73 LEEASSLLMIHM 84


>TR:B6DX41_9GEMI B6DX41 AC4 protein OS=Tomato yellow leaf distortion virus GN=AC4
          PE=4 SV=1
          Length = 87

 Score =  102 bits (254), Expect = 1e-27
 Identities = 56/72 (77%), Positives = 57/72 (79%), Gaps = 12/72 (16%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD- 70
          TNARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEI  NGENSRSTAD 
Sbjct: 18 TNARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIHWNGENSRSTADL 72

Query: 71 ------LPMIHM 76
                L MIHM
Sbjct: 73 LEEASSLLMIHM 84


>TR:Q96613_9GEMI Q96613 AC4 protein OS=Abutilon mosaic virus-HW GN=AC4 PE=4 SV=1
          Length = 85

 Score =  101 bits (251), Expect = 3e-27
 Identities = 60/83 (72%), Positives = 61/83 (73%), Gaps = 19/83 (22%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       +NARI DSSIWSPQPGQHISIQ     TYRELN APTSSPTSTRTEIQL
Sbjct: 12 SKAN-------SNARIIDSSIWSPQPGQHISIQ-----TYRELNRAPTSSPTSTRTEIQL 59

Query: 61 NGENSRSTAD-------LPMIHM 76
          NGENSRSTAD       L MIHM
Sbjct: 60 NGENSRSTADLLGEANRLLMIHM 82


>TR:Q9YL73_9GEMI Q9YL73 AC4 protein OS=Chino del tomate virus-[IC] PE=4 SV=1
          Length = 87

 Score =  100 bits (250), Expect = 4e-27
 Identities = 51/59 (86%), Positives = 54/59 (91%), Gaps = 5/59 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD 70
          T+ARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEIQL+GENSRSTAD
Sbjct: 18 TSARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIQLSGENSRSTAD 71


>TR:B3CJ50_9GEMI B3CJ50 AC4 protein OS=Tobacco leaf rugose virus GN=AC4 PE=4 SV=1
          Length = 87

 Score =  100 bits (250), Expect = 4e-27
 Identities = 56/77 (72%), Positives = 60/77 (77%), Gaps = 12/77 (15%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEI  NGENSR
Sbjct: 13 SSRENTSARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIHWNGENSR 67

Query: 67 STAD-------LPMIHM 76
          STAD       L MIHM
Sbjct: 68 STADLLEEASSLLMIHM 84


>TR:Q2F1F3_9GEMI Q2F1F3 AL4 protein OS=Chino del tomate virus GN=AL4 PE=4 SV=1
          Length = 87

 Score =  100 bits (249), Expect = 6e-27
 Identities = 51/60 (85%), Positives = 54/60 (90%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI DSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEI+LNGENSRSTADL
Sbjct: 18 TSARIIDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIRLNGENSRSTADL 72


>TR:E5KG12_9GEMI E5KG12 Symptom expression protein OS=Okra yellow mosaic Mexico
          virus GN=AC4 PE=4 SV=1
          Length = 87

 Score = 99.8 bits (247), Expect = 1e-26
 Identities = 51/64 (79%), Positives = 55/64 (85%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +R  T+ARITDSSIW PQPGQHISI+     TYRELNPAPTSSPTSTRT IQLNG+NSRS
Sbjct: 14 SRASTSARITDSSIWCPQPGQHISIR-----TYRELNPAPTSSPTSTRTGIQLNGDNSRS 68

Query: 68 TADL 71
          TADL
Sbjct: 69 TADL 72


>TR:E5KCL3_9GEMI E5KCL3 Symptom expression protein OS=Okra yellow mosaic Mexico
          virus GN=AC4 PE=4 SV=1
          Length = 87

 Score = 99.8 bits (247), Expect = 1e-26
 Identities = 51/64 (79%), Positives = 55/64 (85%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +R  T+ARITDSSIW PQPGQHISI+     TYRELNPAPTSSPTSTRT IQLNG+NSRS
Sbjct: 14 SRASTSARITDSSIWCPQPGQHISIR-----TYRELNPAPTSSPTSTRTGIQLNGDNSRS 68

Query: 68 TADL 71
          TADL
Sbjct: 69 TADL 72


>TR:Q19LF3_9GEMI Q19LF3 AC4 OS=Sida mosaic Sinaloa virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 99.4 bits (246), Expect = 2e-26
 Identities = 55/71 (77%), Positives = 55/71 (77%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       T ARITD SIWSPQPGQHISIQ     TYRELNPAPTSSPTS RTEIQL
Sbjct: 12 SKAN-------TTARITDCSIWSPQPGQHISIQ-----TYRELNPAPTSSPTSRRTEIQL 59

Query: 61 NGENSRSTADL 71
           GENSRSTADL
Sbjct: 60 TGENSRSTADL 70


>TR:E2G6Z5_9GEMI E2G6Z5 AC4 protein OS=Rhynchosia rugose golden mosaic
          virus-[Cuba:Camaguey:171:2009] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 99.0 bits (245), Expect = 2e-26
 Identities = 55/77 (71%), Positives = 59/77 (76%), Gaps = 12/77 (15%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSSIWSPQPGQHISI+     TYRELNPAPTSSPTSTRTEI  NGENSR
Sbjct: 11 SSRENTSARITDSSIWSPQPGQHISIR-----TYRELNPAPTSSPTSTRTEIHWNGENSR 65

Query: 67 STAD-------LPMIHM 76
          ST D       L MIHM
Sbjct: 66 STEDLLEEASSLLMIHM 82


>TR:Q5XLQ0_9GEMI Q5XLQ0 Symptom expression protein OS=Okra yellow mottle Iguala
          virus GN=AC4 PE=4 SV=1
          Length = 87

 Score = 99.0 bits (245), Expect = 2e-26
 Identities = 50/64 (78%), Positives = 54/64 (84%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +R  T+A+ITDSSIWSPQPGQHISI+     TYRELNP PTSSPTSTRTE  LNGENSRS
Sbjct: 14 SRASTSAKITDSSIWSPQPGQHISIR-----TYRELNPVPTSSPTSTRTETHLNGENSRS 68

Query: 68 TADL 71
          TADL
Sbjct: 69 TADL 72


>TR:A5X2T9_9GEMI A5X2T9 AC4 OS=Wissadula golden mosaic St Thomas Virus GN=Rep PE=4
          SV=1
          Length = 87

 Score = 97.8 bits (242), Expect = 7e-26
 Identities = 50/68 (73%), Positives = 56/68 (82%), Gaps = 5/68 (7%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          +  ++R  T+ARITDSSIW PQPGQHISIQ     T+RELNPAPTSSPTSTRTEI  NGE
Sbjct: 10 SSSSSRASTSARITDSSIWFPQPGQHISIQ-----TFRELNPAPTSSPTSTRTEIHWNGE 64

Query: 64 NSRSTADL 71
          +SRSTADL
Sbjct: 65 SSRSTADL 72


>TR:B8Y9I5_9GEMI B8Y9I5 AC4 OS=Sida golden mosaic virus - Florida [Phaseolus]
          GN=AC4 PE=4 SV=1
          Length = 85

 Score = 97.4 bits (241), Expect = 9e-26
 Identities = 54/71 (76%), Positives = 55/71 (77%), Gaps = 12/71 (16%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD-- 70
          +ARITDSSIWSPQPGQHISIQ     TYRELNPAPTSSPTSTRT I  NGENSRSTAD  
Sbjct: 17 SARITDSSIWSPQPGQHISIQ-----TYRELNPAPTSSPTSTRTVIHWNGENSRSTADQR 71

Query: 71 -----LPMIHM 76
               L MIHM
Sbjct: 72 EEARRLLMIHM 82


>TR:O71206_9GEMI O71206 AC4 OS=Potato yellow mosaic Trinidad virus-[Trinidad &
          Tobago] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 97.1 bits (240), Expect = 1e-25
 Identities = 50/65 (76%), Positives = 56/65 (86%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++++  +ARITDSSIWSPQPGQHISI+     TYRELN APTSSP STRTEIQLNGENSR
Sbjct: 11 SSKVNISARITDSSIWSPQPGQHISIR-----TYRELNRAPTSSPISTRTEIQLNGENSR 65

Query: 67 STADL 71
          STADL
Sbjct: 66 STADL 70


>TR:O71964_9GEMI O71964 AC4 OS=Sida golden mosaic virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 95.5 bits (236), Expect = 5e-25
 Identities = 54/72 (75%), Positives = 56/72 (77%), Gaps = 12/72 (16%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD- 70
          T+ARITDSSIWSPQPGQHISIQ     TYRELNPAPTSS TSTRT IQ NGE+SRSTAD 
Sbjct: 16 TSARITDSSIWSPQPGQHISIQ-----TYRELNPAPTSSLTSTRTVIQWNGESSRSTADQ 70

Query: 71 ------LPMIHM 76
                L MIHM
Sbjct: 71 LEEASRLLMIHM 82


>TR:E5KBZ4_9GEMI E5KBZ4 AC4 OS=Sida golden yellow vein
          virus-[Jamaica:Liguanea2:2008] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 94.4 bits (233), Expect = 1e-24
 Identities = 52/71 (73%), Positives = 54/71 (76%), Gaps = 12/71 (16%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD-- 70
          +ARITDSSIW PQPGQHISIQ     TYRELNPAPTSSPTS RTEI  NGENSRSTA+  
Sbjct: 17 HARITDSSIWPPQPGQHISIQ-----TYRELNPAPTSSPTSQRTEIHWNGENSRSTAEVL 71

Query: 71 -----LPMIHM 76
               L MIHM
Sbjct: 72 EEAASLLMIHM 82


>TR:B0FN56_9GEMI B0FN56 AC4 OS=Rhynchosia golden mosaic virus GN=AL4 PE=4 SV=1
          Length = 85

 Score = 93.6 bits (231), Expect = 3e-24
 Identities = 47/59 (79%), Positives = 51/59 (86%), Gaps = 5/59 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD 70
          T+ARITDSS W PQPGQHISI+     TYRELNPAPTSSPTSTRTE QLNGE+S+STAD
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TYRELNPAPTSSPTSTRTETQLNGESSKSTAD 69


>TR:F6KD54_9GEMI F6KD54 AC4 protein OS=Whitefly VEM 1 begomovirus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 92.8 bits (229), Expect = 6e-24
 Identities = 47/60 (78%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISIQ     TYRELNPAPTSSPTSTRTE   NG NSRST ++
Sbjct: 16 TSARITDSSIWSPQPGQHISIQ-----TYRELNPAPTSSPTSTRTETHWNGGNSRSTGEV 70


>TR:G5CV32_9GEMI G5CV32 AC4 protein OS=Sida golden yellow vein virus-Malvastrum
          GN=AC4 PE=4 SV=1
          Length = 85

 Score = 92.4 bits (228), Expect = 9e-24
 Identities = 51/71 (71%), Positives = 54/71 (76%), Gaps = 12/71 (16%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD-- 70
          +ARITDSS W PQPGQHISIQ     TYRELNPAPTSSPTS RTEI+ NGENSRSTA+  
Sbjct: 17 HARITDSSTWYPQPGQHISIQ-----TYRELNPAPTSSPTSQRTEIRWNGENSRSTAEVL 71

Query: 71 -----LPMIHM 76
               L MIHM
Sbjct: 72 EEAANLLMIHM 82


>TR:F5BH44_9GEMI F5BH44 AC4 protein OS=Sida golden yellow vein virus-Malvastrum
          [CU:Camaguey 177:09] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 92.4 bits (228), Expect = 9e-24
 Identities = 51/71 (71%), Positives = 54/71 (76%), Gaps = 12/71 (16%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD-- 70
          +ARITDSS W PQPGQHISIQ     TYRELNPAPTSSPTS RTEI+ NGENSRSTA+  
Sbjct: 17 HARITDSSTWYPQPGQHISIQ-----TYRELNPAPTSSPTSQRTEIRWNGENSRSTAEVL 71

Query: 71 -----LPMIHM 76
               L MIHM
Sbjct: 72 EEAANLLMIHM 82


>TR:B0FN68_9GEMI B0FN68 AC4 OS=Rhynchosia golden mosaic virus GN=AL4 PE=4 SV=1
          Length = 87

 Score = 92.4 bits (228), Expect = 9e-24
 Identities = 47/60 (78%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS W PQPGQHISI+     TYRELNPAPTSSPTSTR E QLNGENS STADL
Sbjct: 18 SSARITDSSTWYPQPGQHISIR-----TYRELNPAPTSSPTSTRMETQLNGENSESTADL 72


>TR:Q3LTP9_CALCV Q3LTP9 AC4 OS=Cabbage leaf curl virus (isolate Jamaica) GN=ac4
          PE=4 SV=1
          Length = 87

 Score = 92.0 bits (227), Expect = 1e-23
 Identities = 47/60 (78%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARITDSS WSP PGQHISI+     TYRELNPAPTSSPTSTRTEIQLNGE SRST ++
Sbjct: 18 TTARITDSSTWSPHPGQHISIR-----TYRELNPAPTSSPTSTRTEIQLNGECSRSTEEV 72


>TR:Q3LTN5_CALCV Q3LTN5 AC4 OS=Cabbage leaf curl virus (isolate Jamaica) GN=ac4
          PE=4 SV=1
          Length = 87

 Score = 92.0 bits (227), Expect = 1e-23
 Identities = 47/60 (78%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARITDSS WSP PGQHISI+     TYRELNPAPTSSPTSTRTEIQLNGE SRST ++
Sbjct: 18 TTARITDSSTWSPHPGQHISIR-----TYRELNPAPTSSPTSTRTEIQLNGECSRSTEEV 72


>TR:Q6R7R4_9GEMI Q6R7R4 AC4 OS=Tomato mosaic leaf curl virus GN=ac4 PE=4 SV=1
          Length = 85

 Score = 91.3 bits (225), Expect = 2e-23
 Identities = 46/60 (76%), Positives = 49/60 (81%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARITDSS W PQPGQHISI+     T+RELNPAP SSPTSTRTEIQ NG+NSRST DL
Sbjct: 16 TTARITDSSTWYPQPGQHISIR-----TFRELNPAPMSSPTSTRTEIQFNGDNSRSTEDL 70


>TR:B0FN63_9GEMI B0FN63 AC4 OS=Rhynchosia golden mosaic virus GN=AL4 PE=4 SV=1
          Length = 87

 Score = 91.3 bits (225), Expect = 3e-23
 Identities = 46/60 (76%), Positives = 51/60 (85%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS W PQPGQHISI+     TYRELNPAPTSSPTSTR E QLNGE+S+STADL
Sbjct: 18 SSARITDSSTWFPQPGQHISIR-----TYRELNPAPTSSPTSTRMETQLNGESSKSTADL 72


>TR:E2FZV1_9GEMI E2FZV1 C4 protein OS=Jatropha mosaic India virus-[Lucknow] GN=AC4
          PE=4 SV=1
          Length = 100

 Score = 91.7 bits (226), Expect = 3e-23
 Identities = 48/65 (73%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          + R  +NARI DSS W PQPGQHISIQ     T+RELNPAPTSSPTSTRTEI  NGENSR
Sbjct: 11 STRASSNARIRDSSTWYPQPGQHISIQ-----TFRELNPAPTSSPTSTRTEILWNGENSR 65

Query: 67 STADL 71
          STA L
Sbjct: 66 STAGL 70


>TR:G3KGY8_9GEMI G3KGY8 AC4 OS=Tomato chlorotic leaf distortion virus-[Capsicum]
          GN=ac4 PE=4 SV=1
          Length = 85

 Score = 90.9 bits (224), Expect = 3e-23
 Identities = 48/60 (80%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISIQ     T+RELN A TSSPTSTR E  LNGENSRSTADL
Sbjct: 16 TSARITDSSIWSPQPGQHISIQ-----TFRELNRARTSSPTSTRMETPLNGENSRSTADL 70


>TR:E2CUT8_9GEMI E2CUT8 AC4 OS=Tomato leaf deformation virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 90.9 bits (224), Expect = 3e-23
 Identities = 48/71 (67%), Positives = 55/71 (77%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       +N RITDSS W PQPGQHISI+     T+RELNPAPTS+PTSTRTEI L
Sbjct: 12 SKAN-------SNVRITDSSTWYPQPGQHISIR-----TFRELNPAPTSTPTSTRTEIHL 59

Query: 61 NGENSRSTADL 71
          NGENS+STA++
Sbjct: 60 NGENSKSTAEV 70


>TR:E5KC05_9GEMI E5KC05 AC4 OS=Sida golden mosaic Liguanea virus-[Jamaica:1:2008]
          GN=AC4 PE=4 SV=1
          Length = 85

 Score = 90.5 bits (223), Expect = 5e-23
 Identities = 46/60 (76%), Positives = 49/60 (81%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISIQ     TYRELNPAPTSSPTSTRT    NG NSRST ++
Sbjct: 16 TSARITDSSIWSPQPGQHISIQ-----TYRELNPAPTSSPTSTRTATHWNGGNSRSTGEV 70


>TR:Q2L8B7_9GEMI Q2L8B7 AL4 OS=Rhynchosia golden mosaic virus GN=AL4 PE=4 SV=1
          Length = 87

 Score = 89.7 bits (221), Expect = 1e-22
 Identities = 45/59 (76%), Positives = 50/59 (84%), Gaps = 5/59 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD 70
          ++ARITDSS W PQPGQHISI+     TYRELNPAPTSSPTSTR E QLNGE+S+STAD
Sbjct: 18 SSARITDSSTWYPQPGQHISIR-----TYRELNPAPTSSPTSTRMETQLNGESSKSTAD 71


>TR:P89131_9GEMI P89131 AC4 protein OS=Sida yellow vein virus GN=AC4 PE=4 SV=1
          Length = 87

 Score = 89.7 bits (221), Expect = 1e-22
 Identities = 46/60 (76%), Positives = 49/60 (81%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARITDSSIW PQPGQ+ISI+     T+RELNPAP SSPTSTRT   LNGENSRST DL
Sbjct: 18 TNARITDSSIWCPQPGQYISIR-----TFRELNPAPMSSPTSTRTGTPLNGENSRSTVDL 72


>TR:Q5TJJ3_9GEMI Q5TJJ3 AC4 protein OS=Tomato leaf curl Sinaloa virus GN=AC4 PE=4
          SV=1
          Length = 85

 Score = 89.4 bits (220), Expect = 1e-22
 Identities = 49/72 (68%), Positives = 53/72 (73%), Gaps = 12/72 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       T+ARITDSSIW P PGQHISI+     T+RELN  PTSSPTSTR EIQ 
Sbjct: 12 SKAN-------TSARITDSSIWCPLPGQHISIR-----TFRELNQVPTSSPTSTRMEIQS 59

Query: 61 NGENSRSTADLP 72
          NG+NSRST DLP
Sbjct: 60 NGDNSRSTVDLP 71


>TR:G5CV25_9GEMI G5CV25 AC4 protein OS=Sida yellow mottle virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 89.4 bits (220), Expect = 1e-22
 Identities = 46/60 (76%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISI+     TYRELN APTSSPTSTRTEI  NG NSRST ++
Sbjct: 16 TSARITDSSIWSPQPGQHISIR-----TYRELNLAPTSSPTSTRTEIHWNGGNSRSTVEV 70


>TR:F5BB91_9GEMI F5BB91 AC4 protein OS=Sida yellow mottle virus [Cuba:Sancti
          Spiritus 159:2009] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 89.4 bits (220), Expect = 1e-22
 Identities = 46/60 (76%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSSIWSPQPGQHISI+     TYRELN APTSSPTSTRTEI  NG NSRST ++
Sbjct: 16 TSARITDSSIWSPQPGQHISIR-----TYRELNLAPTSSPTSTRTEIHWNGGNSRSTVEV 70


>TR:C3TUK1_9GEMI C3TUK1 AC4 OS=Bhendi yellow vein mosaic virus GN=AC4 PE=4 SV=1
          Length = 100

 Score = 89.7 bits (221), Expect = 2e-22
 Identities = 47/60 (78%), Positives = 49/60 (81%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI DSS WSPQ GQHISIQ     T+RELNPAPTSSP STRTEI LNG NSRSTADL
Sbjct: 16 TSARIRDSSTWSPQTGQHISIQ-----TFRELNPAPTSSPISTRTEIPLNGGNSRSTADL 70


>TR:Q9IZ46_9GEMI Q9IZ46 AC4 OS=Bhendi yellow vein mosaic virus-[Madurai] GN=AC4
          PE=4 SV=1
          Length = 102

 Score = 89.7 bits (221), Expect = 2e-22
 Identities = 47/60 (78%), Positives = 49/60 (81%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI DSS WSPQ GQHISIQ     T+RELNPAPTSSP STRTEI LNG NSRSTADL
Sbjct: 18 TSARIRDSSTWSPQTGQHISIQ-----TFRELNPAPTSSPISTRTEIPLNGGNSRSTADL 72


>TR:A5H184_9GEMI A5H184 AC4 protein OS=Tomato yellow leaf curl Vietnam virus
          GN=AC4 PE=4 SV=1
          Length = 96

 Score = 89.0 bits (219), Expect = 3e-22
 Identities = 47/60 (78%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARITDSS W PQPGQ ISIQ     T+RELN APTSSPTSTRTE QLNGEN RST DL
Sbjct: 16 TNARITDSSTWYPQPGQRISIQ-----TFRELNRAPTSSPTSTRTETQLNGENFRSTDDL 70


>TR:P89126_9GEMI P89126 AC4 protein OS=Sida golden mosaic Honduras virus GN=AC4
          PE=4 SV=1
          Length = 85

 Score = 88.6 bits (218), Expect = 3e-22
 Identities = 46/60 (76%), Positives = 50/60 (83%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARITDSSIW PQPGQ+ISI+     T+RELN APTSSPTSTRT I LNG NS+STADL
Sbjct: 16 TNARITDSSIWCPQPGQYISIR-----TFRELNQAPTSSPTSTRTAILLNGGNSKSTADL 70


>TR:Q75QI2_9GEMI Q75QI2 C4 OS=Tomato leaf curl Java virus-[Ageratum] GN=C4 PE=4
          SV=1
          Length = 96

 Score = 88.6 bits (218), Expect = 4e-22
 Identities = 46/60 (76%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISIQ     T+RELNPAPTSSP STRTE   NGENSRST DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIQ-----TFRELNPAPTSSPISTRTETLSNGENSRSTDDL 70


>TR:H6UUZ4_9GEMI H6UUZ4 C4 protein OS=Jatropha curcas mosaic virus GN=AC4 PE=4
          SV=1
          Length = 100

 Score = 88.6 bits (218), Expect = 4e-22
 Identities = 45/61 (73%), Positives = 49/61 (80%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARI+DSS W PQPGQHISI+     T+RELNPAPTSSPTSTRT I  NGE+SRS  DL
Sbjct: 16 TNARISDSSTWYPQPGQHISIR-----TFRELNPAPTSSPTSTRTVIHWNGEHSRSMEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:F5C7S8_9GEMI F5C7S8 AC4 protein OS=Jatropha curcas mosaic virus-[Jalgaon]
          GN=AC4 PE=4 SV=1
          Length = 100

 Score = 88.6 bits (218), Expect = 4e-22
 Identities = 45/61 (73%), Positives = 49/61 (80%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARI+DSS W PQPGQHISI+     T+RELNPAPTSSPTSTRT I  NGE+SRS  DL
Sbjct: 16 TNARISDSSTWYPQPGQHISIR-----TFRELNPAPTSSPTSTRTVIHWNGEHSRSMEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:A7LIE2_9GEMI A7LIE2 C4 OS=Okra leaf curl Mali virus GN=C4 PE=4 SV=1
          Length = 100

 Score = 88.6 bits (218), Expect = 4e-22
 Identities = 46/60 (76%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARITDSS WSPQ GQHISIQ     T+RELNPAPTSSPT TR E   NGENSRST DL
Sbjct: 16 TNARITDSSTWSPQTGQHISIQ-----TFRELNPAPTSSPTLTRMETHSNGENSRSTEDL 70


>TR:E5KBW6_9GEMI E5KBW6 AC4 OS=Sida golden mosaic Buckup virus-[Jamaica:St.
          Elizabeth:2004] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 87.8 bits (216), Expect = 6e-22
 Identities = 45/65 (69%), Positives = 52/65 (80%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          +++  T+ARITDSSIW PQPGQ+ISI+     TYRELNPAPTSSPTS RTE   NG NS+
Sbjct: 11 SSKASTSARITDSSIWCPQPGQYISIR-----TYRELNPAPTSSPTSRRTETPSNGGNSK 65

Query: 67 STADL 71
          STADL
Sbjct: 66 STADL 70


>TR:Q9YNV8_9GEMI Q9YNV8 AL4 OS=Sida golden yellow vein virus-[A11] GN=AL4 PE=4
          SV=1
          Length = 85

 Score = 87.4 bits (215), Expect = 8e-22
 Identities = 49/71 (69%), Positives = 51/71 (71%), Gaps = 12/71 (16%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD-- 70
          +ARITD S W PQPGQHISIQ     TYRELNPAPTSSP S RTEI  NGENSRSTA+  
Sbjct: 17 HARITDYSTWYPQPGQHISIQ-----TYRELNPAPTSSPISQRTEIHWNGENSRSTAEVL 71

Query: 71 -----LPMIHM 76
               L MIHM
Sbjct: 72 EEAASLLMIHM 82


>TR:Q4ZGG5_9GEMI Q4ZGG5 AC4 OS=Okra yellow mosaic Mexico virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 87.4 bits (215), Expect = 8e-22
 Identities = 45/60 (75%), Positives = 49/60 (81%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQ GQHISI+     T+RELNPAPTS+P STRTEIQ NGEN RSTADL
Sbjct: 16 TDARITDSSTWCPQVGQHISIR-----TFRELNPAPTSNPISTRTEIQSNGENFRSTADL 70


>TR:D5IBW0_9GEMI D5IBW0 AC4 OS=Jatropha curcas mosaic virus-[Dha] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 87.4 bits (215), Expect = 1e-21
 Identities = 47/70 (67%), Positives = 53/70 (75%), Gaps = 8/70 (11%)

Query: 3  ANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNG 62
          +N +AN   TNARI+DSS W PQP QHISI+     T+RELNPAPTSSPTSTRT I  NG
Sbjct: 10 SNSKAN---TNARISDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSTRTAIPWNG 61

Query: 63 ENSRSTADLP 72
          E+SRS  DLP
Sbjct: 62 EHSRSMEDLP 71


>TR:B8Y3K7_9GEMI B8Y3K7 C4 protein OS=Cotton leaf curl Gezira virus-[okra:Niger]
          GN=C4 PE=4 SV=1
          Length = 97

 Score = 87.0 bits (214), Expect = 2e-21
 Identities = 45/61 (73%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 TTAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGENSRSTEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:B1PIX9_9GEMI B1PIX9 C4 protein OS=Cotton leaf curl Gezira virus-[okra:Niger]
          GN=C4 PE=4 SV=1
          Length = 97

 Score = 87.0 bits (214), Expect = 2e-21
 Identities = 45/61 (73%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 TTAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGENSRSTEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:Q9Z099_9GEMI Q9Z099 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 86.7 bits (213), Expect = 2e-21
 Identities = 47/71 (66%), Positives = 53/71 (74%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSSIW PQPGQHISI+     T+RELNPAPTSSPTSTRTE   
Sbjct: 12 SKAN-------TNAKITDSSIWYPQPGQHISIR-----TFRELNPAPTSSPTSTRTETHS 59

Query: 61 NGENSRSTADL 71
          NG +SRST ++
Sbjct: 60 NGAHSRSTEEV 70


>TR:Q9Z082_9GEMI Q9Z082 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 86.7 bits (213), Expect = 2e-21
 Identities = 47/71 (66%), Positives = 54/71 (76%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSS W PQP QHISI+     T+RELNPAPTSSPTSTRTEI+ 
Sbjct: 12 SKAN-------TNAKITDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSTRTEIRS 59

Query: 61 NGENSRSTADL 71
          NGE+SRST ++
Sbjct: 60 NGEHSRSTEEV 70


>TR:Q9YJ14_9GEMI Q9YJ14 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 86.7 bits (213), Expect = 2e-21
 Identities = 47/71 (66%), Positives = 54/71 (76%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSS W PQP QHISI+     T+RELNPAPTSSPTSTRTEI+ 
Sbjct: 12 SKAN-------TNAKITDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSTRTEIRS 59

Query: 61 NGENSRSTADL 71
          NGE+SRST ++
Sbjct: 60 NGEHSRSTEEV 70


>TR:B6EBG1_9GEMI B6EBG1 AC4 protein OS=Tobacco yellow crinkle
          virus-[Capsicum:Cuba:2007] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 86.7 bits (213), Expect = 2e-21
 Identities = 45/59 (76%), Positives = 49/59 (83%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARITDSS WSPQPGQHISI+     TYRELN APTSSPTSTRTEI  NGE SRSTA++
Sbjct: 17 HARITDSSTWSPQPGQHISIR-----TYRELNLAPTSSPTSTRTEIHCNGEISRSTAEV 70


>TR:B6E954_9GEMI B6E954 AC4 protein OS=Tobacco yellow crinkle virus GN=AC4 PE=4
          SV=1
          Length = 85

 Score = 86.7 bits (213), Expect = 2e-21
 Identities = 45/59 (76%), Positives = 49/59 (83%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARITDSS WSPQPGQHISI+     TYRELN APTSSPTSTRTEI  NGE SRSTA++
Sbjct: 17 HARITDSSTWSPQPGQHISIR-----TYRELNLAPTSSPTSTRTEIHCNGEISRSTAEV 70


>TR:C8ZLK2_9GEMI C8ZLK2 AC4 protein OS=Malvastrum yellow vein Honghe virus GN=AC4
          PE=4 SV=1
          Length = 100

 Score = 87.0 bits (214), Expect = 2e-21
 Identities = 45/65 (69%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  +NA+ITDSS W PQPGQHISIQ     T+RELNPAPTSSPTSTRTE   NGEN R
Sbjct: 11 SSRANSNAKITDSSTWYPQPGQHISIQ-----TFRELNPAPTSSPTSTRTETFSNGENFR 65

Query: 67 STADL 71
          S  DL
Sbjct: 66 SMGDL 70


>TR:A7DXL6_9GEMI A7DXL6 C4 protein OS=Tomato leaf curl Diana virus GN=c4 PE=4 SV=1
          Length = 85

 Score = 86.3 bits (212), Expect = 2e-21
 Identities = 44/65 (67%), Positives = 52/65 (80%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARI+DSS W PQPGQHISI+     T+RELNPAP SSPTSTRTE   NGENSR
Sbjct: 11 SSRENTSARISDSSTWFPQPGQHISIR-----TFRELNPAPMSSPTSTRTETHWNGENSR 65

Query: 67 STADL 71
          STA++
Sbjct: 66 STAEV 70


>TR:Q4VYZ2_9GEMI Q4VYZ2 AC4 protein OS=Tobacco leaf curl Yunnan virus-[Y283]
          GN=AC4 PE=4 SV=1
          Length = 96

 Score = 86.3 bits (212), Expect = 3e-21
 Identities = 44/60 (73%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSPTSTRTE   NGE+ RST DL
Sbjct: 16 TSARITDSSTWCPQPGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGESFRSTEDL 70


>TR:E1V2J2_9GEMI E1V2J2 AC4 protein OS=Ageratum enation virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 85.9 bits (211), Expect = 3e-21
 Identities = 44/60 (73%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNA+ITDSS W PQP QHISI+     T+RELNPAPTSSPTSTRTE   NGENSRS  DL
Sbjct: 16 TNAKITDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSTRTETPSNGENSRSMEDL 70


>TR:D6PZR0_9GEMI D6PZR0 AC4 OS=Okra yellow mosaic Mexico virus -
          [Herissantia:Colima 1] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 85.9 bits (211), Expect = 3e-21
 Identities = 45/71 (63%), Positives = 52/71 (73%), Gaps = 8/71 (11%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          S +N   N   T ARITDSSIW PQPGQHISI+     T+RELNPAPTSSPT T+TE  L
Sbjct: 8  SSSNSRGN---TGARITDSSIWCPQPGQHISIR-----TFRELNPAPTSSPTLTKTETPL 59

Query: 61 NGENSRSTADL 71
          NG++ +ST DL
Sbjct: 60 NGDSFKSTGDL 70


>TR:C0L9G5_9GEMI C0L9G5 C4 OS=Tomato leaf curl Nigeria virus-[Nigeria:2006] GN=C4
          PE=4 SV=1
          Length = 100

 Score = 86.3 bits (212), Expect = 4e-21
 Identities = 48/71 (67%), Positives = 50/71 (70%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       T A+I DSS W PQPGQHISIQ     TYRELNPAPTSSPTSTR EI  
Sbjct: 12 SKAN-------TTAKIRDSSTWCPQPGQHISIQ-----TYRELNPAPTSSPTSTRMEIHS 59

Query: 61 NGENSRSTADL 71
          NGE+SRS  DL
Sbjct: 60 NGESSRSMGDL 70


>TR:Q8B6V3_9GEMI Q8B6V3 AC4 protein OS=Tobacco leaf curl Yunnan virus - [Y136]
          GN=AC4 PE=4 SV=1
          Length = 96

 Score = 85.9 bits (211), Expect = 5e-21
 Identities = 44/60 (73%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSPTSTRTE   NGE+ RST DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGESFRSTEDL 70


>TR:Q776V0_9GEMI Q776V0 Transcriptional regulator protein OS=Tobacco leaf curl
          Yunnan virus - [Y161] GN=AC4 PE=4 SV=1
          Length = 96

 Score = 85.9 bits (211), Expect = 5e-21
 Identities = 44/60 (73%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSPTSTRTE   NGE+ RST DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGESFRSTEDL 70


>TR:A0AB21_9GEMI A0AB21 AC4 protein OS=Malvastrum yellow mosaic virus GN=AC4 PE=4
          SV=1
          Length = 96

 Score = 85.9 bits (211), Expect = 5e-21
 Identities = 44/60 (73%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISIQ     T+RELNPAPTS+PTSTRTE   NGE+ RST DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIQ-----TFRELNPAPTSNPTSTRTETPSNGESFRSTDDL 70


>TR:C0MHQ4_9GEMI C0MHQ4 Putative uncharacterized protein C4 OS=Tomato leaf curl
          Cameroon virus - [Cameroon:Buea:Okra:2008] GN=C4 PE=4
          SV=1
          Length = 85

 Score = 85.5 bits (210), Expect = 5e-21
 Identities = 46/68 (67%), Positives = 51/68 (75%), Gaps = 8/68 (11%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          N +AN   T ARI DSS W PQ GQHISIQ     T+RELNPAPTSSPTSTRT   LNGE
Sbjct: 11 NSKAN---TTARINDSSTWYPQQGQHISIQ-----TFRELNPAPTSSPTSTRTGTHLNGE 62

Query: 64 NSRSTADL 71
          NS+STA++
Sbjct: 63 NSKSTAEV 70


>TR:C0MHP5_9GEMI C0MHP5 Putative uncharacterized protein C4 OS=Tomato leaf curl
          virus-[Buea] GN=C4 PE=4 SV=1
          Length = 85

 Score = 85.5 bits (210), Expect = 5e-21
 Identities = 46/68 (67%), Positives = 51/68 (75%), Gaps = 8/68 (11%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          N +AN   T ARI DSS W PQ GQHISIQ     T+RELNPAPTSSPTSTRT   LNGE
Sbjct: 11 NSKAN---TTARINDSSTWYPQQGQHISIQ-----TFRELNPAPTSSPTSTRTGTHLNGE 62

Query: 64 NSRSTADL 71
          NS+STA++
Sbjct: 63 NSKSTAEV 70


>TR:Q0Z968_ICMV Q0Z968 AC4 (Fragment) OS=Indian cassava mosaic virus PE=4 SV=1
          Length = 82

 Score = 85.1 bits (209), Expect = 6e-21
 Identities = 43/61 (70%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARI DSS W P PGQHISI+     T+RELNPAPTSSPTST+T I  NGE+SRS  DL
Sbjct: 4  TNARIRDSSTWYPHPGQHISIR-----TFRELNPAPTSSPTSTKTAIHWNGEHSRSMEDL 58

Query: 72 P 72
          P
Sbjct: 59 P 59


>TR:A7DXN3_9GEMI A7DXN3 C4 protein OS=Tomato leaf curl Toliara virus GN=c4 PE=4
          SV=1
          Length = 85

 Score = 84.7 bits (208), Expect = 1e-20
 Identities = 44/65 (67%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  + ARITDSS W PQPGQHISIQ     T+RELN APTSSPTSTR E  LNG NSR
Sbjct: 11 SSRANSTARITDSSTWYPQPGQHISIQ-----TFRELNQAPTSSPTSTRMETHLNGVNSR 65

Query: 67 STADL 71
          STA++
Sbjct: 66 STAEV 70


>TR:Q6R7Q7_9GEMI Q6R7Q7 AC4 OS=Tomato yellow margin leaf curl virus GN=ac4 PE=4
          SV=1
          Length = 87

 Score = 84.7 bits (208), Expect = 1e-20
 Identities = 43/65 (66%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          +++  T+A+ITDSSIW PQPGQHISI+     T+RELNPAP SSPT  RTE Q NG NSR
Sbjct: 13 SSKASTSAKITDSSIWFPQPGQHISIR-----TFRELNPAPMSSPTLIRTETQFNGGNSR 67

Query: 67 STADL 71
          ST DL
Sbjct: 68 STEDL 72


>TR:Q0Z970_ICMV Q0Z970 AC4 OS=Indian cassava mosaic virus PE=4 SV=1
          Length = 102

 Score = 85.1 bits (209), Expect = 1e-20
 Identities = 43/61 (70%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARI DSS W P PGQHISI+     T+RELNPAPTSSPTST+T I  NGE+SRS  DL
Sbjct: 18 TNARIRDSSTWYPHPGQHISIR-----TFRELNPAPTSSPTSTKTAIHWNGEHSRSMEDL 72

Query: 72 P 72
          P
Sbjct: 73 P 73


>TR:Q9Z0B5_9GEMI Q9Z0B5 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 84.3 bits (207), Expect = 1e-20
 Identities = 42/65 (64%), Positives = 52/65 (80%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++++ TNA+ITDSSIW PQP QHISI+     T+RELNPAPTSSP STRTE  LNG +SR
Sbjct: 11 SSKVNTNAKITDSSIWYPQPDQHISIR-----TFRELNPAPTSSPISTRTETHLNGAHSR 65

Query: 67 STADL 71
          ST ++
Sbjct: 66 STEEV 70


>TR:Q9Z085_9GEMI Q9Z085 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 84.3 bits (207), Expect = 1e-20
 Identities = 46/71 (64%), Positives = 53/71 (74%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSS W PQP QHISI+     T+RELNPAPTSSPTSTRTEI+ 
Sbjct: 12 SKAN-------TNAKITDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSTRTEIRS 59

Query: 61 NGENSRSTADL 71
           GE+SRST ++
Sbjct: 60 KGEHSRSTEEV 70


>TR:Q91AL1_9GEMI Q91AL1 C4 OS=Tobacco leaf curl virus PE=4 SV=1
          Length = 85

 Score = 84.3 bits (207), Expect = 1e-20
 Identities = 44/65 (67%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  + ARITDSS W PQPGQHISIQ     T+RELN APTSSPTSTR E  LNGENSR
Sbjct: 11 SSRENSTARITDSSTWYPQPGQHISIQ-----TFRELNQAPTSSPTSTRMETHLNGENSR 65

Query: 67 STADL 71
          ST ++
Sbjct: 66 STDEV 70


>TR:Q910W5_9GEMI Q910W5 C4 OS=Tobacco leaf curl virus PE=4 SV=1
          Length = 85

 Score = 84.3 bits (207), Expect = 1e-20
 Identities = 44/65 (67%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  + ARITDSS W PQPGQHISIQ     T+RELN APTSSPTSTR E  LNGENSR
Sbjct: 11 SSRENSTARITDSSTWYPQPGQHISIQ-----TFRELNQAPTSSPTSTRMETHLNGENSR 65

Query: 67 STADL 71
          ST ++
Sbjct: 66 STDEV 70


>TR:Q77I77_9GEMI Q77I77 C4 OS=Tobacco leaf curl Zimbabwe virus PE=4 SV=1
          Length = 85

 Score = 84.3 bits (207), Expect = 1e-20
 Identities = 44/65 (67%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  + ARITDSS W PQPGQHISIQ     T+RELN APTSSPTSTR E  LNGENSR
Sbjct: 11 SSRENSTARITDSSTWYPQPGQHISIQ-----TFRELNQAPTSSPTSTRMETHLNGENSR 65

Query: 67 STADL 71
          ST ++
Sbjct: 66 STDEV 70


>TR:B8ZWM5_9GEMI B8ZWM5 C4 protein OS=Pepper yellow vein Mali virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 84.3 bits (207), Expect = 1e-20
 Identities = 44/60 (73%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISIQ     T+RELN APTSSPTSTRTE  LNG  SRSTA++
Sbjct: 16 TSARITDSSTWYPQPGQHISIQ-----TFRELNQAPTSSPTSTRTETPLNGGYSRSTAEV 70


>TR:Q7TAS6_ICMV Q7TAS6 AC4 protein OS=Indian cassava mosaic virus-[Ker2] GN=AC4
          PE=4 SV=1
          Length = 102

 Score = 84.7 bits (208), Expect = 2e-20
 Identities = 42/61 (68%), Positives = 48/61 (78%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARI+DSS W P PGQHISI+     T++ELNPAPTSSPTST+T I  NGE+SRS  DL
Sbjct: 18 TNARISDSSTWYPHPGQHISIR-----TFKELNPAPTSSPTSTKTAIHWNGEHSRSMEDL 72

Query: 72 P 72
          P
Sbjct: 73 P 73


>TR:Q2MDG5_9GEMI Q2MDG5 AC4 protein OS=Malvastrum leaf curl virus - [G87] GN=ac4
          PE=4 SV=1
          Length = 96

 Score = 84.3 bits (207), Expect = 2e-20
 Identities = 47/68 (69%), Positives = 49/68 (72%), Gaps = 8/68 (11%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          N +AN   T ARITDSS W PQP QHISIQ     T+RELNPAP SSPTS R E  LNG 
Sbjct: 11 NSKAN---TTARITDSSTWFPQPDQHISIQ-----TFRELNPAPMSSPTSIRMETPLNGV 62

Query: 64 NSRSTADL 71
          NSRSTADL
Sbjct: 63 NSRSTADL 70


>TR:Q9Z0B7_9GEMI Q9Z0B7 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 84.0 bits (206), Expect = 2e-20
 Identities = 46/71 (64%), Positives = 52/71 (73%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSSIW PQP QHISI+     T+RELNPAPTSSPTS RTE   
Sbjct: 12 SKAN-------TNAKITDSSIWYPQPDQHISIR-----TFRELNPAPTSSPTSIRTETHS 59

Query: 61 NGENSRSTADL 71
          NGE+SRST ++
Sbjct: 60 NGEHSRSTEEV 70


>TR:D6PZQ5_9GEMI D6PZQ5 AC4 OS=Okra yellow mosaic Mexico virus - [Sida] GN=AC4
          PE=4 SV=1
          Length = 85

 Score = 84.0 bits (206), Expect = 2e-20
 Identities = 45/69 (65%), Positives = 52/69 (75%), Gaps = 8/69 (11%)

Query: 3  ANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNG 62
          +N +AN   TNARI DSS W PQPGQ+ISI+     TYRELNPAPTSSPT T+TE  LNG
Sbjct: 10 SNSKAN---TNARIADSSTWCPQPGQYISIR-----TYRELNPAPTSSPTLTKTETPLNG 61

Query: 63 ENSRSTADL 71
           + +STADL
Sbjct: 62 GSFKSTADL 70


>TR:D2EBE1_9GEMI D2EBE1 C4 protein OS=Pepper yellow vein Mali virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 84.0 bits (206), Expect = 2e-20
 Identities = 43/60 (71%), Positives = 49/60 (81%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELN APTSSPTSTRTE  LNG +SRSTA++
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNQAPTSSPTSTRTETPLNGGSSRSTAEV 70


>TR:D1GV16_9GEMI D1GV16 AC4 protein OS=Ageratum enation virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 84.0 bits (206), Expect = 2e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNA+ITDSS W PQP QHISI+     T+RELNPAPTSSPTSTRTE   NGE+SRS  DL
Sbjct: 16 TNAKITDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSTRTETPSNGESSRSMEDL 70


>TR:A7DXG6_9GEMI A7DXG6 C4 protein OS=Tobacco leaf curl Zimbabwe virus GN=c4 PE=4
          SV=1
          Length = 85

 Score = 84.0 bits (206), Expect = 2e-20
 Identities = 44/65 (67%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  + ARITDSS W PQPGQHISIQ     T+R LN APTSSPTSTR E  LNGENSR
Sbjct: 11 SSRENSTARITDSSTWYPQPGQHISIQ-----TFRVLNQAPTSSPTSTRMETHLNGENSR 65

Query: 67 STADL 71
          STA++
Sbjct: 66 STAEV 70


>TR:Q9IGX8_9GEMI Q9IGX8 AC4 protein OS=Tobacco leaf curl Yunnan virus-[Y3] GN=AC4
          PE=4 SV=1
          Length = 96

 Score = 84.0 bits (206), Expect = 3e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAP SSPTSTRTE   NGE+ RST DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPASSPTSTRTETPSNGESFRSTEDL 70


>TR:E7CSZ0_9GEMI E7CSZ0 AC4 protein OS=Sida micrantha mosaic virus - Rhombifolia
          [Bolivia:Boyuibe-Villamontes:2007] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 83.6 bits (205), Expect = 3e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NARITDSS WSPQPGQHISI      T+RELN  PTSSPTS RTEI  NGENSRST ++
Sbjct: 16 SNARITDSSTWSPQPGQHISIL-----TFRELNHRPTSSPTSIRTEIPSNGENSRSTGEV 70


>TR:Q6A0H1_9GEMI Q6A0H1 AC4 protein OS=Stachytarpheta leaf curl virus - [Hn34]
          GN=ac4 PE=4 SV=1
          Length = 96

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 44/65 (67%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSS WSPQPGQHISI+     T+RELNPAPTSSP S RTE   NGE+ R
Sbjct: 11 SSRENTSARITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPISIRTETPSNGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:H2DF24_9GEMI H2DF24 Putative uncharacterized protein C4 OS=Tomato leaf curl
          Sudan virus GN=C4 PE=4 SV=1
          Length = 96

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 43/65 (66%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  ++A+ITDSS WSPQPGQHISI+     T+RELNPAPTSSPTSTRTE   NG + R
Sbjct: 11 SSRANSSAQITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGVSFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STEDL 70


>TR:A0AB15_9GEMI A0AB15 AC4 protein OS=Malvastrum yellow mosaic virus GN=AC4 PE=4
          SV=1
          Length = 96

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 44/60 (73%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQH SIQ     T RELNPAPTSSPTSTRTE   NGE+ RST DL
Sbjct: 16 TSARITDSSTWYPQPGQHFSIQ-----TSRELNPAPTSSPTSTRTETPSNGESFRSTDDL 70


>TR:F8K9W4_9GEMI F8K9W4 C4 protein OS=Cotton leaf curl Gezira virus GN=C4 PE=4
          SV=1
          Length = 97

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSRSTVDL 70


>TR:D1GZ59_9GEMI D1GZ59 C4 protein OS=Cotton leaf curl Gezira virus-[okra:BFA]
          GN=C4 PE=4 SV=1
          Length = 97

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 43/61 (70%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I D S WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDYSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGENSRSTEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:Q0KFW8_9GEMI Q0KFW8 AC4 protein OS=Tomato leaf curl Guangxi virus GN=AC4 PE=4
          SV=1
          Length = 98

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 45/70 (64%), Positives = 51/70 (72%), Gaps = 8/70 (11%)

Query: 3  ANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNG 62
          +N +AN   TNA+ITDSS WSPQPGQHISI+     T+RELNPAPTSSP   RTE   NG
Sbjct: 12 SNSKAN---TNAKITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPIWRRTETPSNG 63

Query: 63 ENSRSTADLP 72
          E+ RS  DLP
Sbjct: 64 ESFRSMEDLP 73


>TR:D1GZC4_9GEMI D1GZC4 C4 protein OS=Cotton leaf curl Gezira virus-[okra:BFA]
          GN=C4 PE=4 SV=1
          Length = 100

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 43/61 (70%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I D S WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDYSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGENSRSTEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:D1GZB9_9GEMI D1GZB9 C4 protein OS=Cotton leaf curl Gezira virus-[okra:BFA]
          GN=C4 PE=4 SV=1
          Length = 100

 Score = 83.6 bits (205), Expect = 4e-20
 Identities = 43/61 (70%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I D S WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDYSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGENSRSTEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:Q9IN47_9GEMI Q9IN47 AC4 OS=Cotton leaf curl Gezira virus GN=AC4 PE=4 SV=1
          Length = 97

 Score = 83.2 bits (204), Expect = 5e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSRSTEDL 70


>TR:Q80P76_9GEMI Q80P76 C4 protein OS=Hollyhock leaf crumple virus - [Cairo2]
          GN=C4 PE=4 SV=1
          Length = 97

 Score = 83.2 bits (204), Expect = 5e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSRSTEDL 70


>TR:Q774U0_9GEMI Q774U0 C4 OS=Cotton leaf curl Gezira virus-[Okra/Egypt] GN=C4
          PE=4 SV=1
          Length = 97

 Score = 83.2 bits (204), Expect = 5e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSRSTEDL 70


>TR:E5AZV1_9GEMI E5AZV1 Putative uncharacterized protein C4 OS=Okra leaf curl
          Cameroon virus GN=C4 PE=4 SV=1
          Length = 97

 Score = 83.2 bits (204), Expect = 5e-20
 Identities = 43/61 (70%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I D S WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDYSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGENSRSTDDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:D6PM00_9GEMI D6PM00 C4 protein OS=Cotton leaf curl Gezira
          virus-[Hollyhock/Jordan] GN=C4 PE=4 SV=1
          Length = 97

 Score = 83.2 bits (204), Expect = 5e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSRSTEDL 70


>SP:AC4_TPCTV Q88891 Protein C4 OS=Tomato pseudo-curly top virus GN=C4 PE=3
          SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 42/60 (70%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + A+I DSS W PQPGQHISI+     TYRELNPAPTS+PTSTRTE   NGENSR T DL
Sbjct: 16 STAKINDSSTWYPQPGQHISIR-----TYRELNPAPTSTPTSTRTETLSNGENSRLTLDL 70


>TR:Q9Z0B9_9GEMI Q9Z0B9 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 45/71 (63%), Positives = 52/71 (73%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+I DSSIW PQP QHISI+     T+RELNPAPTSSPTST+TE   
Sbjct: 12 SKAN-------TNAKIKDSSIWYPQPDQHISIR-----TFRELNPAPTSSPTSTKTETHS 59

Query: 61 NGENSRSTADL 71
          NGE+SRST ++
Sbjct: 60 NGEHSRSTEEV 70


>TR:Q6RCU5_9GEMI Q6RCU5 AC4 protein OS=Pepper yellow vein Mali virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 43/60 (71%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELN APTSSPTSTRTE  LNG  SRSTA++
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNQAPTSSPTSTRTETPLNGGYSRSTAEV 70


>TR:Q6RCT9_9GEMI Q6RCT9 C4 protein OS=Tomato leaf curl Mali virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 43/64 (67%), Positives = 48/64 (75%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +R+ T A+I DSS W PQPGQHISI+M     YRELNPAPTSSP S RTE   NGENS+ 
Sbjct: 12 SRVNTTAQINDSSTWYPQPGQHISIRM-----YRELNPAPTSSPISIRTETLSNGENSKL 66

Query: 68 TADL 71
          TADL
Sbjct: 67 TADL 70


>TR:I0C063_9GEMI I0C063 C4 protein OS=Ageratum enation virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 43/60 (71%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNA+ITDSS W PQP QHISI+     T+RELNPA TSSPTSTRTE   NGENSRS  DL
Sbjct: 16 TNAKITDSSTWYPQPDQHISIR-----TFRELNPASTSSPTSTRTETPSNGENSRSMEDL 70


>TR:E7CT11_9GEMI E7CT11 AC4 protein OS=Sida micrantha mosaic virus - Rhombifolia
          [Bolivia:Cerro Fraile 1:2007] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NARITDSS W PQPGQHISI      T+RELN  PTSSPTS RTEI  NGENSRSTA++
Sbjct: 16 SNARITDSSTWYPQPGQHISIL-----TFRELNHRPTSSPTSIRTEIPSNGENSRSTAEV 70


>TR:E3ULT0_9GEMI E3ULT0 AC4 OS=Tomato chino La Paz virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 45/69 (65%), Positives = 51/69 (73%), Gaps = 8/69 (11%)

Query: 3  ANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNG 62
          +N +AN   +  +I DSS W PQPGQHISI+     T+RELN APTSSP STR EIQ NG
Sbjct: 10 SNSKAN---SKHKIADSSTWYPQPGQHISIR-----TFRELNQAPTSSPMSTRMEIQSNG 61

Query: 63 ENSRSTADL 71
          ENSRSTADL
Sbjct: 62 ENSRSTADL 70


>TR:D2EBD5_9GEMI D2EBD5 C4 protein OS=Pepper yellow vein Mali virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 82.8 bits (203), Expect = 6e-20
 Identities = 43/60 (71%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELN APTSSPTSTRTE  LNG  SRSTA++
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNQAPTSSPTSTRTETPLNGGYSRSTAEV 70


>TR:Q5JZL1_9GEMI Q5JZL1 AC4 protein OS=Senecio yellow mosaic virus GN=AC4 PE=4
          SV=1
          Length = 100

 Score = 83.2 bits (204), Expect = 6e-20
 Identities = 44/60 (73%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARITDSS WSPQPGQHISIQ+     +RELN APTSSP  TRT  Q NGEN RST DL
Sbjct: 16 TNARITDSSTWSPQPGQHISIQI-----FRELNQAPTSSPIWTRTVTQSNGENFRSTDDL 70


>TR:A7DXH2_9GEMI A7DXH2 C4 protein OS=Bean leaf curl Madagascar virus GN=c4 PE=4
          SV=1
          Length = 100

 Score = 83.2 bits (204), Expect = 6e-20
 Identities = 43/60 (71%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 STAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGENSRSTGDL 70


>TR:Q8B6U9_9GEMI Q8B6U9 AC4 protein OS=Tobacco leaf curl Yunnan virus - [Y143]
          GN=AC4 PE=4 SV=1
          Length = 96

 Score = 82.8 bits (203), Expect = 7e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQ GQHISI+     T+RELNPAPTSSPTSTRTE   NGE+ RST DL
Sbjct: 16 TSARITDSSTWYPQQGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGESFRSTEDL 70


>TR:D1GZH9_9GEMI D1GZH9 C4 protein OS=Cotton leaf curl Gezira virus-[okra:BFA]
          GN=C4 PE=4 SV=1
          Length = 97

 Score = 82.8 bits (203), Expect = 8e-20
 Identities = 43/60 (71%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGE+SRST DL
Sbjct: 16 TTAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHSNGESSRSTGDL 70


>TR:Q9Z0C5_9GEMI Q9Z0C5 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 82.4 bits (202), Expect = 8e-20
 Identities = 45/71 (63%), Positives = 51/71 (71%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   
Sbjct: 12 SKAN-------TNAKITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETHS 59

Query: 61 NGENSRSTADL 71
          NG +SRST ++
Sbjct: 60 NGAHSRSTEEV 70


>TR:E5CYF3_9GEMI E5CYF3 C4 OS=Sweet potato begomovirus GN=C4 PE=4 SV=1
          Length = 85

 Score = 82.4 bits (202), Expect = 8e-20
 Identities = 43/65 (66%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          +++  +NARI DSS W  QPGQHISI+     TYRELNPAPTSSPTS R EI+ +GE+SR
Sbjct: 11 SSKASSNARIRDSSTWYLQPGQHISIR-----TYRELNPAPTSSPTSIRMEIRSSGESSR 65

Query: 67 STADL 71
          STADL
Sbjct: 66 STADL 70


>TR:D4HSB2_9GEMI D4HSB2 C4 OS=Sweet potato leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 82.4 bits (202), Expect = 8e-20
 Identities = 43/65 (66%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          +++  +NARI DSS W  QPGQHISI+     TYRELNPAPTSSPTS R EI+ +GE+SR
Sbjct: 11 SSKASSNARIRDSSTWYLQPGQHISIR-----TYRELNPAPTSSPTSIRMEIRSSGESSR 65

Query: 67 STADL 71
          STADL
Sbjct: 66 STADL 70


>TR:B8ZWP3_9GEMI B8ZWP3 C4 protein OS=Pepper yellow vein Mali virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 82.4 bits (202), Expect = 8e-20
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISIQ     T+RELN APTSSPTS RTE  LNG  SRSTA++
Sbjct: 16 TSARITDSSTWYPQPGQHISIQ-----TFRELNQAPTSSPTSRRTETPLNGAYSRSTAEV 70


>TR:Q5WM64_9GEMI Q5WM64 AC4 protein OS=Ageratum yellow vein China virus - [G68]
          GN=AC4 PE=4 SV=1
          Length = 98

 Score = 82.8 bits (203), Expect = 8e-20
 Identities = 45/70 (64%), Positives = 51/70 (72%), Gaps = 8/70 (11%)

Query: 3  ANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNG 62
          +N +AN   TNA+I DSS WSPQPGQHISI+     T+RELNPAPTSSPT  RTE   NG
Sbjct: 12 SNSKAN---TNAKIADSSTWSPQPGQHISIR-----TFRELNPAPTSSPTWRRTETPSNG 63

Query: 63 ENSRSTADLP 72
          E+ RST  LP
Sbjct: 64 ESFRSTDALP 73


>TR:Q0KFX4_9GEMI Q0KFX4 AC4 protein OS=Tomato leaf curl Guangxi virus GN=AC4 PE=4
          SV=1
          Length = 98

 Score = 82.8 bits (203), Expect = 8e-20
 Identities = 45/69 (65%), Positives = 51/69 (73%), Gaps = 8/69 (11%)

Query: 3  ANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNG 62
          +N +AN   TNA+ITDSS WSPQPGQHISI+     T+RELNPAPTSSPT  RTE    G
Sbjct: 12 SNSKAN---TNAKITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPTWRRTETPSTG 63

Query: 63 ENSRSTADL 71
          E+ RST DL
Sbjct: 64 ESFRSTDDL 72


>TR:F2X902_9GEMI F2X902 C4 OS=Sweet potato leaf curl Sao Paulo virus PE=4 SV=1
          Length = 87

 Score = 82.4 bits (202), Expect = 8e-20
 Identities = 44/65 (67%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R +T+ARI DSS WS QPGQHIS Q     T+RE NPAPTSSPTS R E   NGENSR
Sbjct: 13 SSRGITSARIKDSSTWSLQPGQHISTQ-----TFRERNPAPTSSPTSIRMETLWNGENSR 67

Query: 67 STADL 71
          STADL
Sbjct: 68 STADL 72


>TR:F2X8X8_9GEMI F2X8X8 C4 OS=Sweet potato leaf curl virus PE=4 SV=1
          Length = 87

 Score = 82.4 bits (202), Expect = 8e-20
 Identities = 44/65 (67%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R +T+ARI DSS WS QPGQHIS Q     T+RE NPAPTSSPTS R E   NGENSR
Sbjct: 13 SSRGITSARIKDSSTWSLQPGQHISTQ-----TFRERNPAPTSSPTSIRMETLWNGENSR 67

Query: 67 STADL 71
          STADL
Sbjct: 68 STADL 72


>TR:E5CYF2_9GEMI E5CYF2 C4 OS=Sweet potato begomovirus GN=C4 PE=4 SV=1
          Length = 87

 Score = 82.4 bits (202), Expect = 8e-20
 Identities = 44/65 (67%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R +T+ARI DSS WS QPGQHIS Q     T+RE NPAPTSSPTS R E   NGENSR
Sbjct: 13 SSRGITSARIKDSSTWSLQPGQHISTQ-----TFRERNPAPTSSPTSIRMETLWNGENSR 67

Query: 67 STADL 71
          STADL
Sbjct: 68 STADL 72


>TR:D1GZB3_9GEMI D1GZB3 C4 protein OS=Cotton leaf curl Gezira virus-[okra:BFA]
          GN=C4 PE=4 SV=1
          Length = 100

 Score = 82.8 bits (203), Expect = 8e-20
 Identities = 43/60 (71%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NA+I DSS W PQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SNAKIIDSSTWYPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETPSNGENSRSTGDL 70


>TR:Q992L4_9GEMI Q992L4 C4 protein OS=Tomato leaf curl Malaysia virus PE=4 SV=1
          Length = 96

 Score = 82.4 bits (202), Expect = 1e-19
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSPTSTRTE    GE+ RST DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPTSTRTETPSIGESFRSTEDL 70


>TR:G9CLY3_9GEMI G9CLY3 AC4 protein OS=Sida mosaic Alagoas virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 82.0 bits (201), Expect = 1e-19
 Identities = 41/60 (68%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NA+ITDSSIWSPQPGQHISI+     T+RELN  PTSSPTS RTE   NGENS+ST ++
Sbjct: 16 SNAKITDSSIWSPQPGQHISIR-----TFRELNHRPTSSPTSRRTETPSNGENSKSTEEV 70


>TR:E2G6Y8_9GEMI E2G6Y8 AC4 protein OS=Rhynchosia golden mosaic Havana
          virus-[Cuba:Havana:28:2007] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 82.0 bits (201), Expect = 1e-19
 Identities = 47/71 (66%), Positives = 50/71 (70%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       T+ARITDSS W PQPGQHISIQ     TYRELN A TSSPTSTR EI  
Sbjct: 12 SKAN-------TSARITDSSTWYPQPGQHISIQ-----TYRELNQAQTSSPTSTRMEIHF 59

Query: 61 NGENSRSTADL 71
          NGE+ +STA L
Sbjct: 60 NGESFKSTAGL 70


>TR:B8ZWL9_9GEMI B8ZWL9 C4 protein OS=Pepper yellow vein Mali virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 82.0 bits (201), Expect = 1e-19
 Identities = 43/60 (71%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISIQ     T+RELN APTSSPTS RTE  LNG  SRSTA++
Sbjct: 16 TSARITDSSTWYPQPGQHISIQ-----TFRELNQAPTSSPTSRRTETPLNGGYSRSTAEV 70


>TR:Q0JY06_9GEMI Q0JY06 AC4 protein OS=Malvastrum leaf curl virus GN=AC4 PE=4 SV=1
          Length = 96

 Score = 82.0 bits (201), Expect = 1e-19
 Identities = 46/68 (67%), Positives = 48/68 (70%), Gaps = 8/68 (11%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          N +AN   T ARITDSS W PQP QHISIQ     T+RELNPAP SSPTS R E  LNG 
Sbjct: 11 NSKAN---TTARITDSSTWFPQPDQHISIQ-----TFRELNPAPMSSPTSIRMETPLNGV 62

Query: 64 NSRSTADL 71
          NSRST DL
Sbjct: 63 NSRSTDDL 70


>TR:Q8QVG9_9GEMI Q8QVG9 C4 protein OS=Ageratum enation virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 42/59 (71%), Positives = 46/59 (77%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARI DSS WSPQ GQHISI+     T+RELNPAPTSSPTSTRTE   NGE+SRS  DL
Sbjct: 17 SARINDSSTWSPQTGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGESSRSMGDL 70


>TR:Q7T5U7_9GEMI Q7T5U7 AL4 protein OS=Tomato chino La Paz virus GN=AL4 PE=4 SV=1
          Length = 85

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 42/60 (70%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + +RI DSS W PQPGQHISI+     T+RELN APTSSPTSTR EI  NGENSRST DL
Sbjct: 16 SKSRIKDSSTWYPQPGQHISIR-----TFRELNQAPTSSPTSTRMEIHWNGENSRSTEDL 70


>TR:H2E6X9_9GEMI H2E6X9 C4 protein OS=Sauropus leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 42/60 (70%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARITDSS W PQPGQHISIQ     T+RELNPAPTSSP  TRTE    GENSRST ++
Sbjct: 16 TTARITDSSTWCPQPGQHISIQ-----TFRELNPAPTSSPIWTRTETPSTGENSRSTLEV 70


>TR:H2E6W7_9GEMI H2E6W7 C4 protein OS=Sauropus leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 42/60 (70%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARITDSS W PQPGQHISIQ     T+RELNPAPTSSP  TRTE    GENSRST ++
Sbjct: 16 TTARITDSSTWCPQPGQHISIQ-----TFRELNPAPTSSPIWTRTETPSTGENSRSTLEV 70


>TR:D6PZQ0_9GEMI D6PZQ0 AC4 OS=Okra yellow mosaic Mexico virus - [Sida:Colima 2]
          GN=AC4 PE=4 SV=1
          Length = 85

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 42/68 (61%), Positives = 50/68 (73%), Gaps = 5/68 (7%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          +  ++R  T ARITDSS W PQPGQHISIQ     T+RELNPAPTSSPT T+TE  LNG 
Sbjct: 8  SSSSSRGNTGARITDSSTWCPQPGQHISIQ-----TFRELNPAPTSSPTLTKTETPLNGG 62

Query: 64 NSRSTADL 71
          + +ST D+
Sbjct: 63 SFKSTEDV 70


>TR:C5J9I8_9GEMI C5J9I8 AC4 protein OS=Clerodendrum golden mosaic Jiangsu virus
          GN=AC4 PE=4 SV=1
          Length = 85

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T A+ITDSS W PQPGQHISI+     T+RELNPAPTSSP STR EI  NGEN +STA++
Sbjct: 16 TTAQITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRMEIHSNGENFKSTAEV 70


>TR:Q8JLL5_9GEMI Q8JLL5 Transcriptional regulator protein OS=Stachytarpheta leaf
          curl virus - [Hn5] GN=AC4 PE=4 SV=1
          Length = 96

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 43/65 (66%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSS WSPQPGQHISI+     T+RELNPAPTSSP S RTE   +GE+ R
Sbjct: 11 SSRENTSARITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPISIRTETPSSGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:Q6A0H7_9GEMI Q6A0H7 AC4 protein OS=Stachytarpheta leaf curl virus - [Hn30]
          GN=ac4 PE=4 SV=1
          Length = 96

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 43/65 (66%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSS WSPQPGQHISI+     T+RELNPAPTSSP S RTE   +GE+ R
Sbjct: 11 SSRENTSARITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPISIRTETPSSGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:Q68V34_9GEMI Q68V34 AC4 protein OS=Sida yellow mosaic China virus - [Hainan 8]
          GN=ac4 PE=4 SV=1
          Length = 96

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 43/65 (66%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+A+ITDSSIW PQPGQ+ISIQ     T+RELNPAPTSSP STRTE    GE+ R
Sbjct: 11 SSRENTSAKITDSSIWYPQPGQYISIQ-----TFRELNPAPTSSPISTRTETPSTGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STEDL 70


>TR:Q4GXW6_9GEMI Q4GXW6 Putative AC4 protein OS=Sida yellow mosaic China virus -
          [Hainan 8] GN=ac4 PE=4 SV=1
          Length = 96

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 43/65 (66%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+A+ITDSSIW PQPGQ+ISIQ     T+RELNPAPTSSP STRTE    GE+ R
Sbjct: 11 SSRENTSAKITDSSIWYPQPGQYISIQ-----TFRELNPAPTSSPISTRTETPSTGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STEDL 70


>TR:Q09M33_9GEMI Q09M33 AC4 OS=Ageratum yellow vein Hualian
          virus-[Taiwan:Hualian4:2000] GN=AC4 PE=4 SV=1
          Length = 96

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 42/60 (70%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   NGE+ RST DL
Sbjct: 16 TSARISDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGESFRSTDDL 70


>TR:C5J4Q8_9GEMI C5J4Q8 Putative uncharacterized protein C4 OS=Okra leaf curl
          virus-[Cameroon] GN=C4 PE=4 SV=1
          Length = 97

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 42/61 (68%), Positives = 47/61 (77%), Gaps = 5/61 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I D S WSPQ GQHISIQ     T+REL+PAPTSSPTSTR E   NGENSRST DL
Sbjct: 16 SSAKIRDYSTWSPQIGQHISIQ-----TFRELSPAPTSSPTSTRMETHSNGENSRSTEDL 70

Query: 72 P 72
          P
Sbjct: 71 P 71


>TR:Q9YNW4_9GEMI Q9YNW4 AL4 OS=Sida golden mosaic Florida virus-USA GN=AL1 PE=4
          SV=1
          Length = 85

 Score = 81.3 bits (199), Expect = 2e-19
 Identities = 44/65 (67%), Positives = 48/65 (73%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  TNARITDSS WSP P Q  SIQ     TYRELNPAPTSSPTS RTEI  NG NSR
Sbjct: 11 SSRANTNARITDSSTWSPHPCQPHSIQ-----TYRELNPAPTSSPTSRRTEIYWNGVNSR 65

Query: 67 STADL 71
          ST ++
Sbjct: 66 STGEV 70


>TR:H8WR39_9GEMI H8WR39 AV4 protein OS=African cassava mosaic Burkina Faso virus
          GN=AV4 PE=4 SV=1
          Length = 85

 Score = 81.3 bits (199), Expect = 2e-19
 Identities = 41/60 (68%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T A+I DSS W PQPGQHISIQ     T++ELN AP SSPTSTRTE  LNGENSRST ++
Sbjct: 16 TTAKINDSSTWYPQPGQHISIQ-----TFKELNQAPMSSPTSTRTETPLNGENSRSTEEV 70


>TR:G1C2N6_9GEMI G1C2N6 AC4 protein OS=Ageratum enation virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 81.3 bits (199), Expect = 2e-19
 Identities = 42/59 (71%), Positives = 45/59 (76%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARI DSS W PQ GQHISI+     T+RELNPAPTSSPTSTRTE   NGENSRS  DL
Sbjct: 17 SARINDSSTWYPQTGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGENSRSMGDL 70


>TR:B7ZDQ3_9GEMI B7ZDQ3 AC4 protein OS=Ageratum enation virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 81.3 bits (199), Expect = 2e-19
 Identities = 42/59 (71%), Positives = 45/59 (76%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARI DSS W PQ GQHISI+     T+RELNPAPTSSPTSTRTE   NGENSRS  DL
Sbjct: 17 SARINDSSTWYPQTGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGENSRSMGDL 70


>TR:B0FTY0_9GEMI B0FTY0 C4 protein OS=Tomato leaf curl Ghana virus GN=C4 PE=4 SV=1
          Length = 99

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 41/59 (69%), Positives = 46/59 (77%), Gaps = 5/59 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD 70
          TNA+ITDSS W P+PGQHISIQ     T+RELNPAPTSSP S +TE  LNGE+ RST D
Sbjct: 18 TNAKITDSSTWYPRPGQHISIQ-----TFRELNPAPTSSPISIKTETPLNGESFRSTED 71


>TR:E7CT18_9GEMI E7CT18 AC4 protein OS=Sida micrantha mosaic virus - Rhombifolia
          [Bolivia:Cerro Fraile 2:2007] GN=AC4 PE=4 SV=1
          Length = 87

 Score = 81.3 bits (199), Expect = 2e-19
 Identities = 42/60 (70%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NA+ITDSS W PQPGQHISI      T+RELN  PTSSPTS RTEI  NGENSRSTA++
Sbjct: 18 SNAQITDSSTWYPQPGQHISIL-----TFRELNHRPTSSPTSIRTEIPSNGENSRSTAEV 72


>TR:Q8UZ54_ICMV Q8UZ54 AC4 protein OS=Indian cassava mosaic virus-[Maharashtra]
          GN=AC4 PE=4 SV=1
          Length = 102

 Score = 81.6 bits (200), Expect = 2e-19
 Identities = 47/72 (65%), Positives = 50/72 (69%), Gaps = 12/72 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNARI+DSS W  QPGQHISIQ     T+RELNPAPTSSPTSTRT I  
Sbjct: 14 SKAN-------TNARISDSSTWYHQPGQHISIQ-----TFRELNPAPTSSPTSTRTVIPW 61

Query: 61 NGENSRSTADLP 72
          NGE+ RS  D P
Sbjct: 62 NGEHFRSMDDRP 73


>TR:Q8V979_9GEMI Q8V979 C4 protein OS=Soybean crinkle leaf virus-[Japan] PE=4 SV=1
          Length = 96

 Score = 81.3 bits (199), Expect = 3e-19
 Identities = 42/60 (70%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   +GE+ RST DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSSGESFRSTDDL 70


>TR:Q8B6S4_TYCSV Q8B6S4 C4 protein OS=Tomato yellow leaf curl Sardinia virus GN=C4
          PE=4 SV=1
          Length = 96

 Score = 81.3 bits (199), Expect = 3e-19
 Identities = 43/65 (66%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R+ + A+ITDSSIW PQP QHISI+     T+RELN APTSSPTSTRTE+ LNG  SR
Sbjct: 11 SSRVNSTAKITDSSIWYPQPDQHISIR-----TFRELNQAPTSSPTSTRTEMFLNGVPSR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>SP:AC4_BCTVC Q91J24 Protein C4 OS=Beet curly top virus (strain
          California/Logan) GN=C4 PE=1 SV=2
          Length = 85

 Score = 80.9 bits (198), Expect = 3e-19
 Identities = 40/58 (68%), Positives = 47/58 (81%), Gaps = 5/58 (8%)

Query: 14 ARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++I+D S W PQPGQHISI+     T+RELNPAPTSSPTSTRTE QLNG NSRST ++
Sbjct: 18 SQISDYSTWYPQPGQHISIR-----TFRELNPAPTSSPTSTRTETQLNGGNSRSTVEV 70


>TR:D2N1S7_9GEMI D2N1S7 C4 protein OS=Ageratum enation virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 80.9 bits (198), Expect = 3e-19
 Identities = 42/59 (71%), Positives = 45/59 (76%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARI DSS W PQ GQHISI+     T+RELNPAPTSSPTSTRTE   NGENSRS  DL
Sbjct: 17 SARINDSSTWYPQTGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGENSRSMEDL 70


>TR:B8ZWL3_9GEMI B8ZWL3 C4 protein OS=Pepper yellow vein Mali virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 80.9 bits (198), Expect = 3e-19
 Identities = 42/60 (70%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELN APTSSPTSTRTE  LNG  SRST ++
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNQAPTSSPTSTRTETPLNGGYSRSTEEV 70


>TR:B5APR5_9GEMI B5APR5 AC4 OS=Ageratum enation virus - Lucknow PE=4 SV=1
          Length = 85

 Score = 80.9 bits (198), Expect = 3e-19
 Identities = 42/59 (71%), Positives = 45/59 (76%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARI DSS W PQ GQHISI+     T+RELNPAPTSSPTSTRTE   NGENSRS  DL
Sbjct: 17 SARINDSSTWYPQTGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGENSRSMEDL 70


>TR:B5A458_9GEMI B5A458 AC4 protein OS=Ageratum enation virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 80.9 bits (198), Expect = 3e-19
 Identities = 42/59 (71%), Positives = 45/59 (76%), Gaps = 5/59 (8%)

Query: 13 NARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +ARI DSS W PQ GQHISI+     T+RELNPAPTSSPTSTRTE   NGENSRS  DL
Sbjct: 17 SARINDSSTWYPQTGQHISIR-----TFRELNPAPTSSPTSTRTETPSNGENSRSMEDL 70


>TR:B5TEW3_9GEMI B5TEW3 AC4 OS=Sida micrantha mosaic virus - [Brazil:okra] GN=AC4
          PE=4 SV=1
          Length = 87

 Score = 80.9 bits (198), Expect = 3e-19
 Identities = 43/60 (71%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NARITDSS W PQPGQHISI      TYRELN  PTSSPTSTRTEI   GENSRST ++
Sbjct: 18 SNARITDSSTWYPQPGQHISIL-----TYRELNHRPTSSPTSTRTEILSIGENSRSTEEV 72


>TR:B2ZWE7_9GEMI B2ZWE7 AC4 protein OS=Tobacco mottle leaf curl virus GN=AC4 PE=4
          SV=1
          Length = 87

 Score = 80.9 bits (198), Expect = 3e-19
 Identities = 42/60 (70%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS WSP  GQHISI+     T+RELN APTSSPTSTRTEI  NGE+SRST ++
Sbjct: 18 TSARITDSSTWSPHLGQHISIR-----TFRELNRAPTSSPTSTRTEIHWNGESSRSTEEV 72


>SP:AC4_TYCS2 Q67621 Protein C4 OS=Tomato yellow leaf curl Sardinia virus
          (isolate Spain-2) GN=C4 PE=3 SV=1
          Length = 96

 Score = 80.9 bits (198), Expect = 4e-19
 Identities = 43/65 (66%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R+ + A+ITDSSIW PQP QHISI+     T+RELN APTSSPTSTRTE+ LNG  SR
Sbjct: 11 SSRVNSTAKITDSSIWYPQPDQHISIR-----TFRELNQAPTSSPTSTRTEMFLNGVLSR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>SP:AC4_TYCS1 P38612 Protein C4 OS=Tomato yellow leaf curl Sardinia virus
          (isolate Spain-1) GN=C4 PE=3 SV=1
          Length = 96

 Score = 80.9 bits (198), Expect = 4e-19
 Identities = 43/65 (66%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R+ + A+ITDSSIW PQP QHISI+     T+RELN APTSSPTSTRTE+ LNG  SR
Sbjct: 11 SSRVNSTAKITDSSIWYPQPDQHISIR-----TFRELNQAPTSSPTSTRTEMFLNGVLSR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:B1PRH9_9GEMI B1PRH9 C4 protein OS=Ageratum yellow vein China virus GN=C4 PE=4
          SV=1
          Length = 96

 Score = 80.9 bits (198), Expect = 4e-19
 Identities = 43/65 (66%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARI+DSS W PQP QHISI+     T+RELNPAPTSSP STRTE   NGENSR
Sbjct: 11 SSRENTSARISDSSTWYPQPDQHISIR-----TFRELNPAPTSSPISTRTETLSNGENSR 65

Query: 67 STADL 71
          S  DL
Sbjct: 66 SMHDL 70


>TR:B0JFE3_9GEMI B0JFE3 AC4 protein OS=Ageratum yellow vein virus - [G129] GN=AC4
          PE=4 SV=1
          Length = 96

 Score = 80.9 bits (198), Expect = 4e-19
 Identities = 43/64 (67%), Positives = 48/64 (75%), Gaps = 5/64 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSS W PQ GQHISI+     T+RELNPAPTSSPTS RTE    GEN R
Sbjct: 11 SSRENTSARITDSSTWYPQTGQHISIR-----TFRELNPAPTSSPTSIRTETPSTGENFR 65

Query: 67 STAD 70
          STAD
Sbjct: 66 STAD 69


>TR:A5H175_9GEMI A5H175 AC4 protein OS=Sida yellow vein Vietnam virus GN=AC4 PE=4
          SV=1
          Length = 96

 Score = 80.9 bits (198), Expect = 4e-19
 Identities = 43/65 (66%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSS W PQPGQHISI+     TYRELNPAPTSSPTS RTE   +G + R
Sbjct: 11 SSRENTSARITDSSTWYPQPGQHISIR-----TYRELNPAPTSSPTSIRTETPSSGASFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:Q8V0I5_9GEMI Q8V0I5 C4 OS=Cotton leaf curl Gezira virus-[Okra/Shambat] PE=4
          SV=1
          Length = 97

 Score = 80.9 bits (198), Expect = 4e-19
 Identities = 42/60 (70%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENSR T DL
Sbjct: 16 SSAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSRLTEDL 70


>TR:C3VIS7_9GEMI C3VIS7 C4 Protein OS=Cotton leaf curl Gezira virus GN=C4 PE=4
          SV=1
          Length = 97

 Score = 80.9 bits (198), Expect = 4e-19
 Identities = 46/71 (64%), Positives = 49/71 (69%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       + A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   
Sbjct: 12 SKAN-------STAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHW 59

Query: 61 NGENSRSTADL 71
          NGENSR T DL
Sbjct: 60 NGENSRLTEDL 70


>TR:Q333I8_9GEMI Q333I8 Replication-associated protein (Fragment) OS=Foetid cassia
           leaf curl virus-[Thailand] GN=C1 PE=4 SV=1
          Length = 233

 Score = 84.3 bits (207), Expect = 4e-19
 Identities = 43/60 (71%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12  TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
           T+ARITDSS WSPQPGQHISI+     T+RELNPAPTSSP STRTE   NG++ RST DL
Sbjct: 71  TSARITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPISTRTETLSNGDSFRSTEDL 125


>TR:Q333I6_9GEMI Q333I6 Replication-associated protein (Fragment) OS=Foetid cassia
           leaf curl virus-[Thailand] GN=C1 PE=4 SV=1
          Length = 233

 Score = 84.3 bits (207), Expect = 4e-19
 Identities = 43/60 (71%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12  TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
           T+ARITDSS WSPQPGQHISI+     T+RELNPAPTSSP STRTE   NG++ RST DL
Sbjct: 70  TSARITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPISTRTETLSNGDSFRSTEDL 124


>TR:Q70PB9_9GEMI Q70PB9 AC4 protein OS=Sida micrantha mosaic virus GN=AC4 PE=4
          SV=1
          Length = 85

 Score = 80.5 bits (197), Expect = 5e-19
 Identities = 40/60 (66%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + ++ITD S W PQ GQH+SI+     T+RELNPAPTSSPTSTRTEIQLNG NSRST ++
Sbjct: 16 SKSQITDCSTWYPQIGQHVSIR-----TFRELNPAPTSSPTSTRTEIQLNGGNSRSTEEV 70


>TR:O91200_9GEMI O91200 AC4 protein OS=Tomato mosaic Havana virus-[Quivican]
          GN=AC4 PE=4 SV=1
          Length = 85

 Score = 80.5 bits (197), Expect = 5e-19
 Identities = 45/72 (62%), Positives = 50/72 (69%), Gaps = 12/72 (16%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI DSS WSP PGQHISI+     TYREL+ APTS  TSTRTE++ NG NSRST DL
Sbjct: 16 TSARIADSSTWSPHPGQHISIR-----TYRELSRAPTSRHTSTRTEMRQNGGNSRSTVDL 70

Query: 72 -------PMIHM 76
                 P IHM
Sbjct: 71 LEEAASRPTIHM 82


>TR:A5YKL5_9GEMI A5YKL5 AC4 OS=Malvastrum leaf curl virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 80.5 bits (197), Expect = 5e-19
 Identities = 43/64 (67%), Positives = 48/64 (75%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +R  T ARI+DSS W PQPGQ ISIQ     T+RELN  PTSSPTSTRTE   NGENSRS
Sbjct: 12 SRESTTARISDSSTWYPQPGQLISIQ-----TFRELNQVPTSSPTSTRTETPSNGENSRS 66

Query: 68 TADL 71
          TA++
Sbjct: 67 TAEV 70


>TR:A0FK19_9GEMI A0FK19 AC4 OS=Soybean blistering mosaic virus GN=AC4 PE=4 SV=1
          Length = 118

 Score = 81.3 bits (199), Expect = 5e-19
 Identities = 45/68 (66%), Positives = 50/68 (73%), Gaps = 8/68 (11%)

Query: 4   NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
           N +AN   TNARITDSS W PQ  QHISI+     T+RELN  PTSSPTSTRTEI  NGE
Sbjct: 44  NSKAN---TNARITDSSTWYPQQDQHISIR-----TFRELNHRPTSSPTSTRTEILSNGE 95

Query: 64  NSRSTADL 71
           NSRST ++
Sbjct: 96  NSRSTVEV 103


>TR:Q68UV0_9GEMI Q68UV0 AC4 protein OS=Tobacco leaf curl Yunnan virus GN=AC4 PE=4
          SV=1
          Length = 96

 Score = 80.5 bits (197), Expect = 6e-19
 Identities = 42/60 (70%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQ GQHISI+     T+RELNPAPTSSPTSTR E   NGE+ RST DL
Sbjct: 16 TSARITDSSTWYPQQGQHISIR-----TFRELNPAPTSSPTSTRPETPSNGESFRSTEDL 70


>TR:D5H3R7_9GEMI D5H3R7 AC4 protein OS=Malvastrum yellow vein Baoshan virus GN=AC4
          PE=4 SV=1
          Length = 96

 Score = 80.5 bits (197), Expect = 6e-19
 Identities = 41/60 (68%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+ITDSS WSPQPGQ+ISI+     T+RELNPAPTSSPTSTRT    NGE+ RST DL
Sbjct: 16 SSAKITDSSTWSPQPGQYISIR-----TFRELNPAPTSSPTSTRTGTHSNGESFRSTDDL 70


>TR:Q5W1N0_9GEMI Q5W1N0 AC4 protein OS=Ageratum leaf curl virus - [G52] GN=AC4
          PE=4 SV=1
          Length = 98

 Score = 80.5 bits (197), Expect = 6e-19
 Identities = 41/57 (71%), Positives = 45/57 (78%), Gaps = 5/57 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRST 68
          TNA+ITDSS WSPQPGQHISI+     T+RELNPAPTSSPT  RTE   NGE+ RST
Sbjct: 18 TNAKITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPTWRRTETPSNGESFRST 69


>TR:Q5CCZ3_9GEMI Q5CCZ3 Putative C4 protein OS=Tomato leaf curl Java
          virus-[Purwokerto] GN=C4 PE=4 SV=1
          Length = 96

 Score = 80.1 bits (196), Expect = 9e-19
 Identities = 42/60 (70%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARITDSSIW P+PGQHISI+     T+RELNPAPTSSP STRTE   NGE+ R T DL
Sbjct: 16 TTARITDSSIWYPRPGQHISIR-----TFRELNPAPTSSPISTRTETLSNGESFRWTDDL 70


>TR:Q5DVC5_9GEMI Q5DVC5 Putative AC4 protein OS=Tomato leaf curl Madagascar
          virus-Menabe [Madagascar:Morondova:2001] GN=AC4 PE=4
          SV=1
          Length = 100

 Score = 80.1 bits (196), Expect = 1e-18
 Identities = 41/64 (64%), Positives = 48/64 (75%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +++ T+ARI DSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   NGEN + 
Sbjct: 12 SKVSTSARIRDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGENFKL 66

Query: 68 TADL 71
           ADL
Sbjct: 67 MADL 70


>TR:B5AG38_9GEMI B5AG38 C4 protein OS=Tomato leaf curl Kumasi virus GN=C4 PE=4
          SV=1
          Length = 100

 Score = 80.1 bits (196), Expect = 1e-18
 Identities = 45/71 (63%), Positives = 50/71 (70%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       T+A+ITDSS W PQPGQHISIQ     T+RELNPAPTSSP S +TE  L
Sbjct: 12 SKAN-------TSAQITDSSTWYPQPGQHISIQ-----TFRELNPAPTSSPISIKTETPL 59

Query: 61 NGENSRSTADL 71
          NGE+ RS  DL
Sbjct: 60 NGESFRSMDDL 70


>TR:Q7TGR0_9GEMI Q7TGR0 AC4 protein OS=Stachytarpheta leaf curl virus - [Hn5.4]
          GN=AC4 PE=4 SV=1
          Length = 96

 Score = 79.7 bits (195), Expect = 1e-18
 Identities = 42/65 (64%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARI DSS WSPQPGQHISI+     T+RELNPAPTSSP S RTE   +GE+ R
Sbjct: 11 SSRENTSARIADSSTWSPQPGQHISIR-----TFRELNPAPTSSPISIRTETPSSGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:Q2PDL2_9GEMI Q2PDL2 C4 protein OS=Tomato leaf curl Philippines virus - [LB]
          GN=C4 PE=4 SV=1
          Length = 96

 Score = 79.7 bits (195), Expect = 1e-18
 Identities = 41/60 (68%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+AR +DSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   NGE+ RST DL
Sbjct: 16 TSARSSDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGESFRSTEDL 70


>TR:Q9Z0A8_9GEMI Q9Z0A8 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 79.3 bits (194), Expect = 1e-18
 Identities = 44/71 (61%), Positives = 50/71 (70%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSS W PQP QHISI+     T+RELNPAPTSSPTS RTE   
Sbjct: 12 SKAN-------TNAKITDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSIRTETHS 59

Query: 61 NGENSRSTADL 71
          NG +SRST ++
Sbjct: 60 NGGHSRSTEEV 70


>TR:E5KC00_9GEMI E5KC00 AC4 OS=Sida golden mosaic Braco
          virus-[Jamaica:Liguanea:2008] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 79.3 bits (194), Expect = 1e-18
 Identities = 41/65 (63%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R+ T+A+ITDSS W PQ GQHISIQ     T+RELNP PTSSPTS RT   LNGE SR
Sbjct: 11 SSRVNTSAQITDSSTWCPQTGQHISIQ-----TFRELNPVPTSSPTSQRTGTPLNGECSR 65

Query: 67 STADL 71
          ST ++
Sbjct: 66 STVEV 70


>TR:Q643X5_ICMV Q643X5 AC4 protein OS=Indian cassava mosaic virus GN=AC4 PE=4
          SV=1
          Length = 96

 Score = 79.3 bits (194), Expect = 2e-18
 Identities = 46/72 (63%), Positives = 49/72 (68%), Gaps = 12/72 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNARI+D S W  QPGQHISIQ     T+RELNPAPTSSPTSTRT I  
Sbjct: 14 SKAN-------TNARISDFSTWYHQPGQHISIQ-----TFRELNPAPTSSPTSTRTVIPW 61

Query: 61 NGENSRSTADLP 72
          NGE+ RS  D P
Sbjct: 62 NGEHFRSMDDRP 73


>TR:Q0KFZ2_9GEMI Q0KFZ2 AC4 protein OS=Malvastrum leaf curl Guangdong virus GN=AC4
          PE=4 SV=1
          Length = 96

 Score = 79.3 bits (194), Expect = 2e-18
 Identities = 42/65 (64%), Positives = 48/65 (73%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARI+DSS W PQPGQHISIQ     T+RELN  PTSSPTSTRTE   NGE+ R
Sbjct: 11 SSRENTSARISDSSTWYPQPGQHISIQ-----TFRELNQVPTSSPTSTRTETPSNGESFR 65

Query: 67 STADL 71
          S  DL
Sbjct: 66 SMEDL 70


>TR:A5H1D6_9GEMI A5H1D6 AC4 protein OS=Sida leaf curl virus GN=AC4 PE=4 SV=1
          Length = 96

 Score = 79.3 bits (194), Expect = 2e-18
 Identities = 42/60 (70%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS WSPQ GQHISI+     T+RELNPAPTSSPTSTRTE    GE+ RS  DL
Sbjct: 16 TSARITDSSTWSPQTGQHISIR-----TFRELNPAPTSSPTSTRTETPSIGESFRSMEDL 70


>TR:Q70PB4_9GEMI Q70PB4 AC4 protein OS=Sida micrantha mosaic virus GN=AC4 PE=4
          SV=1
          Length = 85

 Score = 79.0 bits (193), Expect = 2e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NARITDSS W PQPGQHISI      TYRELNP PT SPTS RTEI  +G NSRST ++
Sbjct: 16 SNARITDSSTWYPQPGQHISIL-----TYRELNPRPTLSPTSKRTEILSSGGNSRSTVEV 70


>TR:E7CT25_9GEMI E7CT25 AC4 protein OS=Sida mosaic Bolivia virus 1 GN=AC4 PE=4
          SV=1
          Length = 85

 Score = 79.0 bits (193), Expect = 2e-18
 Identities = 40/60 (66%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NARITDSS WSP+PGQ ISI+     T+RELN  PTSSPTST+T I  NGENSRST ++
Sbjct: 16 SNARITDSSTWSPKPGQRISIR-----TFRELNHRPTSSPTSTKTAIPSNGENSRSTGEV 70


>TR:Q66UV6_TYCSV Q66UV6 Symptom expression protein OS=Tomato yellow leaf curl
          Sardinia virus GN=C4 PE=4 SV=1
          Length = 96

 Score = 79.0 bits (193), Expect = 2e-18
 Identities = 42/65 (64%), Positives = 50/65 (76%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R+ + A+ITDSSIW PQP QHISI+     T+RELN AP SSPTSTRTE+ LNG  SR
Sbjct: 11 SSRVNSTAKITDSSIWYPQPDQHISIR-----TFRELNQAPASSPTSTRTEMFLNGVLSR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:Q0GMH8_TYCSV Q0GMH8 C4 OS=Tomato yellow leaf curl Sardinia virus-Israel PE=4
          SV=1
          Length = 96

 Score = 79.0 bits (193), Expect = 2e-18
 Identities = 42/60 (70%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + A+ITDSSIW PQ GQHISI+     T+RELN APTSSP STRTE+ LNGE SRST DL
Sbjct: 16 STAKITDSSIWHPQQGQHISIR-----TFRELNRAPTSSPISTRTEMFLNGELSRSTDDL 70


>TR:A2ICQ5_9GEMI A2ICQ5 C4 protein OS=Tomato leaf curl Arusha virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 78.6 bits (192), Expect = 3e-18
 Identities = 40/60 (66%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + A+ITDSS W PQPGQHISI+     T+RELN APTSSPTSTR E   NG NSRSTA++
Sbjct: 16 STAKITDSSTWYPQPGQHISIR-----TFRELNQAPTSSPTSTRMETHSNGGNSRSTAEV 70


>TR:C3TU40_9GEMI C3TU40 AC4 OS=Bhendi yellow vein mosaic virus
          [2005:Pandaralli:India] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 79.0 bits (193), Expect = 3e-18
 Identities = 44/65 (67%), Positives = 48/65 (73%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+A   DSS   PQ GQHISIQ     T+RELNPAPTSSP STRTEI LNG NSR
Sbjct: 11 SSRASTSAGTIDSSTSLPQAGQHISIQ-----TFRELNPAPTSSPISTRTEIPLNGGNSR 65

Query: 67 STADL 71
          STADL
Sbjct: 66 STADL 70


>TR:Q88952_TYCSV Q88952 C4 OS=Tomato yellow leaf curl Sardinia virus-[Sicily] PE=4
          SV=1
          Length = 96

 Score = 78.6 bits (192), Expect = 3e-18
 Identities = 42/60 (70%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + A+ITDSSIW PQ GQHISI+     T+RELN APTSSP STRTE+ LNGE SRST DL
Sbjct: 16 STAKITDSSIWYPQQGQHISIR-----TFRELNRAPTSSPISTRTEMFLNGELSRSTDDL 70


>TR:Q5XUM0_TYCSV Q5XUM0 C4 protein OS=Tomato yellow leaf curl Sardinia
          virus-[Sicily] GN=C4 PE=4 SV=1
          Length = 96

 Score = 78.6 bits (192), Expect = 3e-18
 Identities = 42/60 (70%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          + A+ITDSSIW PQ GQHISI+     T+RELN APTSSP STRTE+ LNGE SRST DL
Sbjct: 16 STAKITDSSIWYPQQGQHISIR-----TFRELNRAPTSSPISTRTEMFLNGEISRSTDDL 70


>TR:Q0KFW2_9GEMI Q0KFW2 AC4 protein OS=Tomato leaf curl Guangxi virus GN=AC4 PE=4
          SV=1
          Length = 98

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 43/69 (62%), Positives = 49/69 (71%), Gaps = 8/69 (11%)

Query: 3  ANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNG 62
          +N +AN   TNA+ITDSS WSPQPGQHISI+     T+RELNPAPTSSP   RTE    G
Sbjct: 12 SNSKAN---TNAKITDSSTWSPQPGQHISIR-----TFRELNPAPTSSPIWRRTETPSTG 63

Query: 63 ENSRSTADL 71
          E+ RS  DL
Sbjct: 64 ESFRSMEDL 72


>TR:Q5YB78_9GEMI Q5YB78 AC4 protein OS=Tomato leaf curl Guangdong virus GN=AC4
          PE=4 SV=1
          Length = 85

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 43/68 (63%), Positives = 48/68 (70%), Gaps = 8/68 (11%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          N +AN   T ARITDSS W PQP QHISI+     T+RELNPAP SSPTS R E  LNG 
Sbjct: 11 NSKAN---TTARITDSSTWFPQPDQHISIR-----TFRELNPAPMSSPTSIRMETSLNGV 62

Query: 64 NSRSTADL 71
          NSRST ++
Sbjct: 63 NSRSTDEV 70


>TR:D6Q1S1_9GEMI D6Q1S1 AC4 OS=Sida golden mottle virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 42/65 (64%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T ARITDSSIW PQP Q+ISI+     TYRELNPAPTSSPTS +T   LNGE SR
Sbjct: 11 SSRGSTTARITDSSIWCPQPVQYISIR-----TYRELNPAPTSSPTSRKTGTPLNGECSR 65

Query: 67 STADL 71
          ST ++
Sbjct: 66 STEEV 70


>TR:C1JYG8_9GEMI C1JYG8 AC4 protein OS=Malvastrum leaf curl virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARI+DSS W PQPGQ ISIQ     T+RELN  PTSSPTSTRTE   NGE+SRSTA++
Sbjct: 16 TTARISDSSTWYPQPGQLISIQ-----TFRELNQVPTSSPTSTRTETPSNGESSRSTAEV 70


>TR:B2X138_9GEMI B2X138 AC4 protein OS=Macroptilium yellow mosaic virus GN=AC4
          PE=4 SV=1
          Length = 85

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 40/60 (66%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITD S WSP PGQHISI+     T+RELN APTSSP STR E Q NGENSRST ++
Sbjct: 16 SSARITDYSTWSPHPGQHISIR-----TFRELNRAPTSSPISTRMESQSNGENSRSTVEV 70


>TR:B1PRA7_9GEMI B1PRA7 C4 protein OS=Squash leaf curl Philippines virus GN=C4
          PE=4 SV=1
          Length = 85

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 40/58 (68%), Positives = 45/58 (77%), Gaps = 5/58 (8%)

Query: 14 ARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          A+ITDSS W PQ GQHISI+     T+RELNPAP SSP STR E  LNGENSRSTA++
Sbjct: 18 AQITDSSTWCPQVGQHISIR-----TFRELNPAPMSSPISTRVETPLNGENSRSTAEV 70


>TR:A7KX28_9GEMI A7KX28 AC4 protein OS=Allamanda leaf curl virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 44/71 (61%), Positives = 49/71 (69%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       + ARI DSS W PQPGQHISIQ     T+RELNPAP SSPTSTR E  L
Sbjct: 12 SKAN-------STARIRDSSTWYPQPGQHISIQ-----TFRELNPAPMSSPTSTRMETPL 59

Query: 61 NGENSRSTADL 71
          NG +SRST ++
Sbjct: 60 NGVSSRSTEEV 70


>TR:A5H172_9GEMI A5H172 AC4 protein OS=Mimosa yellow leaf curl virus GN=AC4 PE=4
          SV=1
          Length = 85

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 40/60 (66%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS W PQPGQHISI+     T+RELNP PTSSP STRT  Q NGE SRST ++
Sbjct: 16 SSARITDSSTWYPQPGQHISIR-----TFRELNPVPTSSPISTRTGTQSNGEISRSTEEV 70


>TR:E7BNN2_9GEMI E7BNN2 AC4 protein OS=Okra leaf curl India virus [India:Sonipat
          EL14A:2006] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 16 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 70


>TR:E7BNH8_9GEMI E7BNH8 AC4 protein OS=Okra enation leaf curl virus [India:Munthal
          EL38:2006] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 16 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 70


>TR:E7BNH2_9GEMI E7BNH2 AC4 protein OS=Okra enation leaf curl virus [India:Munthal
          EL39:2006] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 16 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 70


>TR:E7BNG6_9GEMI E7BNG6 AC4 protein OS=Okra enation leaf curl virus [India:Munthal
          EL32:2006] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 16 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 70


>TR:E7BNF4_9GEMI E7BNF4 AC4 protein OS=Okra enation leaf curl virus [India:Munthal
          EL37:2006] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 16 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 70


>TR:E7BNE8_9GEMI E7BNE8 AC4 protein OS=Okra enation leaf curl virus [India:Sonipat
          EL14:2006] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 16 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 70


>TR:E7CT32_9GEMI E7CT32 AC4 protein OS=Sida mosaic Bolivia virus 2 GN=AC4 PE=4
          SV=1
          Length = 87

 Score = 78.2 bits (191), Expect = 4e-18
 Identities = 42/65 (64%), Positives = 51/65 (78%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R+ ++ARI DSSIWSPQPGQHISI+     T+RELN A  SS TSTRTE  LNGE SR
Sbjct: 13 SSRVNSSARIRDSSIWSPQPGQHISIR-----TFRELNRAQMSSRTSTRTETPLNGEFSR 67

Query: 67 STADL 71
          STA++
Sbjct: 68 STAEV 72


>SP:AC4_ICMV Q08588 Protein AC4 OS=Indian cassava mosaic virus GN=AC4 PE=3
          SV=1
          Length = 102

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 46/72 (63%), Positives = 50/72 (69%), Gaps = 12/72 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNARI+DSS W  QPGQHISIQ     T+RELNPAPTSSPTSTRT I  
Sbjct: 14 SKAN-------TNARISDSSTWYHQPGQHISIQ-----TFRELNPAPTSSPTSTRTVILG 61

Query: 61 NGENSRSTADLP 72
          +GE+ RS  D P
Sbjct: 62 DGEHFRSMDDQP 73


>TR:D3HIN0_9GEMI D3HIN0 Regulatory protein OS=Bhendi yellow vein mosaic virus
          GN=AC4 PE=4 SV=1
          Length = 102

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 18 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 72


>TR:D3HIM8_9GEMI D3HIM8 Regulatory protein OS=Mesta yellow vein mosaic virus
          GN=AC4 PE=4 SV=1
          Length = 102

 Score = 78.6 bits (192), Expect = 4e-18
 Identities = 41/60 (68%), Positives = 47/60 (78%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 18 TSARISDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 72


>TR:Q8B5F1_9GEMI Q8B5F1 AC4 OS=Tomato yellow leaf curl Kanchanaburi
          virus-[Thailand Kan2] GN=AC4 PE=4 SV=1
          Length = 94

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 44/71 (61%), Positives = 48/71 (67%), Gaps = 12/71 (16%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+ITDSS W PQP QHISIQM     +RELN APTSSP   RTEIQLNGENSR   DL
Sbjct: 10 SSAKITDSSTWFPQPDQHISIQM-----FRELNQAPTSSPIWRRTEIQLNGENSRLMEDL 64

Query: 72 -------PMIH 75
                 PM H
Sbjct: 65 LEADNNPPMTH 75


>TR:Q8B6X3_9GEMI Q8B6X3 C4 protein OS=Stachytarpheta leaf curl virus GN=AC4 PE=4
          SV=1
          Length = 96

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 42/65 (64%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSS WSPQPGQHISI+     T+RELNPAPTSS  S RTE   +GE+ R
Sbjct: 11 SSRENTSARITDSSTWSPQPGQHISIR-----TFRELNPAPTSSHISIRTETPSSGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:Q80S63_9GEMI Q80S63 C4 OS=Ageratum yellow vein virus-[Tomato] GN=C4 PE=4 SV=1
          Length = 96

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   NG + RS  DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGVSFRSMDDL 70


>TR:Q776V3_9GEMI Q776V3 AC4 protein OS=Stachytarpheta leaf curl virus - [Hn6.1]
          GN=AC4 PE=4 SV=1
          Length = 96

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 42/65 (64%), Positives = 49/65 (75%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSS WSPQPGQHISI+     T+RELNPAPTSS  S RTE   +GE+ R
Sbjct: 11 SSRENTSARITDSSTWSPQPGQHISIR-----TFRELNPAPTSSHISIRTETPSSGESFR 65

Query: 67 STADL 71
          ST DL
Sbjct: 66 STDDL 70


>TR:Q5CCZ7_9GEMI Q5CCZ7 Putative C4 protein OS=Ageratum yellow vein
          virus-[Tomato2] GN=C4 PE=4 SV=1
          Length = 96

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   NG + RS  DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGVSFRSMDDL 70


>TR:Q5CCX5_9GEMI Q5CCX5 Putative C4 protein OS=Ageratum yellow vein
          virus-[Indonesia] GN=C4 PE=4 SV=1
          Length = 96

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   NG + RS  DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGVSFRSMDDL 70


>TR:Q5CCW3_9GEMI Q5CCW3 Putative C4 protein OS=Ageratum yellow vein
          virus-[Indonesia] GN=C4 PE=4 SV=1
          Length = 96

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARITDSS W PQPGQHISI+     T+RELNPAPTSSP STRTE   NG + RS  DL
Sbjct: 16 TSARITDSSTWYPQPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGVSFRSMDDL 70


>TR:A6BM92_9GEMI A6BM92 C4 protein OS=Tomato leaf curl Philippines virus - Laguna
          GN=C4 PE=4 SV=1
          Length = 96

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 42/66 (63%), Positives = 48/66 (72%), Gaps = 5/66 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARITDSSIW  QPGQHISI+     T+RELN APTSSP STRTE   NG + R
Sbjct: 11 SSRANTSARITDSSIWYTQPGQHISIR-----TFRELNQAPTSSPISTRTETPSNGVSFR 65

Query: 67 STADLP 72
          S  DLP
Sbjct: 66 SMEDLP 71


>TR:Q8V0J0_9GEMI Q8V0J0 C4 OS=Cotton leaf curl Gezira virus-[Okra/Gezira] PE=4
          SV=1
          Length = 97

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ GQHISIQ     T+RELNPAPTSSPTSTR E   NGENS  T DL
Sbjct: 16 SSAKIRDSSTWSPQIGQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSGLTEDL 70


>TR:Q8V0I7_9GEMI Q8V0I7 C4 OS=Cotton leaf curl Gezira virus-[Sida] PE=4 SV=1
          Length = 97

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+I DSS WSPQ  QHISIQ     T+RELNPAPTSSPTSTR E   NGENSR T DL
Sbjct: 16 SSAKIRDSSTWSPQIDQHISIQ-----TFRELNPAPTSSPTSTRMETHWNGENSRLTEDL 70


>TR:Q0ZD42_9GEMI Q0ZD42 C4 protein OS=Tomato leaf curl Arusha virus GN=C4 PE=4
          SV=1
          Length = 85

 Score = 77.8 bits (190), Expect = 5e-18
 Identities = 40/56 (71%), Positives = 44/56 (78%), Gaps = 5/56 (8%)

Query: 16 ITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ITDSS W PQPGQHISI+     T+RELN APTSSPTSTR EI  NG NSRSTA++
Sbjct: 20 ITDSSTWYPQPGQHISIR-----TFRELNQAPTSSPTSTRMEIHSNGGNSRSTAEV 70


>TR:H8ZQN3_9GEMI H8ZQN3 AC4 protein OS=Centrosema yellow spot virus PE=4 SV=1
          Length = 85

 Score = 77.8 bits (190), Expect = 5e-18
 Identities = 41/58 (70%), Positives = 44/58 (75%), Gaps = 5/58 (8%)

Query: 14 ARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++I D S W PQPGQHISIQ     T+RELN  PTSSPTSTRTEI  NG NSRSTADL
Sbjct: 18 SQIRDCSTWYPQPGQHISIQ-----TFRELNHRPTSSPTSTRTEILSNGVNSRSTADL 70


>TR:H2E6U9_9GEMI H2E6U9 C4 protein OS=Sauropus leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 77.8 bits (190), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 44/60 (73%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T ARITDSS W  QPGQHISIQ     T+RELNPAPTSSP  TRTE    GENSRST ++
Sbjct: 16 TTARITDSSTWCLQPGQHISIQ-----TFRELNPAPTSSPIWTRTETPSTGENSRSTLEV 70


>TR:B1PRF5_9GEMI B1PRF5 C4 protein OS=Squash leaf curl Philippines virus GN=C4
          PE=4 SV=1
          Length = 85

 Score = 77.8 bits (190), Expect = 5e-18
 Identities = 40/58 (68%), Positives = 45/58 (77%), Gaps = 5/58 (8%)

Query: 14 ARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          A+ITDSS W PQ GQHISI+     T+RELNPAP SSP STR E  LNGENSRSTA++
Sbjct: 18 AQITDSSTWCPQVGQHISIR-----TFRELNPAPMSSPISTRMETPLNGENSRSTAEV 70


>TR:Q8B5F6_9GEMI Q8B5F6 AC4 OS=Tomato yellow leaf curl Kanchanaburi
          virus-[Thailand Kan1] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 44/71 (61%), Positives = 48/71 (67%), Gaps = 12/71 (16%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++A+ITDSS W PQP QHISIQM     +RELN APTSSP   RTEIQLNGENSR   DL
Sbjct: 16 SSAKITDSSTWFPQPDQHISIQM-----FRELNQAPTSSPIWRRTEIQLNGENSRLMEDL 70

Query: 72 -------PMIH 75
                 PM H
Sbjct: 71 LEADNNPPMTH 81


>TR:E7BNG0_9GEMI E7BNG0 AC4 protein OS=Okra enation leaf curl virus [India:Munthal
          EL41:2006] GN=AC4 PE=4 SV=1
          Length = 100

 Score = 78.2 bits (191), Expect = 5e-18
 Identities = 41/60 (68%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI DSS WSPQ GQHISI+     TYRELNPAPTS+PTSTRT    +GE+ RST DL
Sbjct: 16 TSARINDSSTWSPQAGQHISIR-----TYRELNPAPTSNPTSTRTGTLSSGESFRSTDDL 70


>TR:B8YJC3_9GEMI B8YJC3 AC4 OS=Tomato yellow spot virus PE=4 SV=1
          Length = 87

 Score = 77.8 bits (190), Expect = 6e-18
 Identities = 44/71 (61%), Positives = 51/71 (71%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       ++A+I DSSIW PQ GQHISI+     T+RELN  PTSSPTSTRTEIQ 
Sbjct: 14 SKAN-------SSAQINDSSIWYPQQGQHISIR-----TFRELNRRPTSSPTSTRTEIQW 61

Query: 61 NGENSRSTADL 71
          NG NSRST ++
Sbjct: 62 NGGNSRSTEEV 72


>TR:G0W2U6_9GEMI G0W2U6 AC4 protein OS=Mesta yellow vein mosaic virus GN=ac4 PE=4
          SV=1
          Length = 102

 Score = 78.2 bits (191), Expect = 6e-18
 Identities = 41/57 (71%), Positives = 44/57 (77%), Gaps = 5/57 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRST 68
          T+A+I DSS WSPQP QHISIQ     TYRELNPAPTSSPTSTRTE   +G N RST
Sbjct: 18 TSAKIIDSSTWSPQPDQHISIQ-----TYRELNPAPTSSPTSTRTETFSSGGNFRST 69


>TR:B1PRJ1_9GEMI B1PRJ1 C4 protein OS=Tomato leaf curl Cotabato virus GN=C4 PE=4
          SV=1
          Length = 96

 Score = 77.8 bits (190), Expect = 7e-18
 Identities = 44/71 (61%), Positives = 50/71 (70%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       T+A+ITDSSIW PQ GQHISI+     T+RELN APTSSP STRTE   
Sbjct: 12 SKAN-------TSAKITDSSIWYPQTGQHISIR-----TFRELNRAPTSSPISTRTETHS 59

Query: 61 NGENSRSTADL 71
          NG NSRST ++
Sbjct: 60 NGANSRSTEEV 70


>TR:Q9Z0A6_9GEMI Q9Z0A6 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 77.4 bits (189), Expect = 7e-18
 Identities = 43/71 (60%), Positives = 49/71 (69%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TN +ITDSS W PQP QHISI+     T+RELNPAPTSSPTS RTE   
Sbjct: 12 SKAN-------TNGQITDSSTWYPQPDQHISIR-----TFRELNPAPTSSPTSIRTETHS 59

Query: 61 NGENSRSTADL 71
          NG +SRST ++
Sbjct: 60 NGGHSRSTEEV 70


>TR:Q5RZ87_9GEMI Q5RZ87 Transcriptional regulator protein OS=Lindernia anagallis
          yellow vein virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 77.4 bits (189), Expect = 7e-18
 Identities = 40/60 (66%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSSIW PQPGQHISI+     TYRELNPAPTSSP   R E    GENSRST ++
Sbjct: 16 SSARITDSSIWYPQPGQHISIR-----TYRELNPAPTSSPIWRRMETPSTGENSRSTEEV 70


>TR:Q2L8C3_9GEMI Q2L8C3 AL4 OS=Tomato chino La Paz virus GN=AL4 PE=4 SV=1
          Length = 85

 Score = 77.4 bits (189), Expect = 7e-18
 Identities = 44/70 (62%), Positives = 48/70 (68%), Gaps = 12/70 (17%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN +        +I DSS W PQ GQHISI+     T+RELN  PTSSP STRTEIQL
Sbjct: 12 SKANSKR-------KIADSSTWYPQLGQHISIR-----TFRELNQVPTSSPMSTRTEIQL 59

Query: 61 NGENSRSTAD 70
          NGE SRSTAD
Sbjct: 60 NGETSRSTAD 69


>TR:C3W964_9GEMI C3W964 AC4 protein OS=Malvastrum yellow vein Baoshan virus GN=AC4
          PE=4 SV=1
          Length = 100

 Score = 77.8 bits (190), Expect = 8e-18
 Identities = 41/60 (68%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          T+ARI+DSS WSP  GQHISIQ+     +RELN A TSSPTSTRTE  LNGE+ RST DL
Sbjct: 16 TSARISDSSTWSPHTGQHISIQI-----FRELNQAQTSSPTSTRTETSLNGESFRSTDDL 70


>TR:C0MHN6_9GEMI C0MHN6 Putative uncharacterized protein C4 OS=Cotton leaf curl
          Gezira virus-[Cameroon] GN=C4 PE=4 SV=1
          Length = 100

 Score = 77.8 bits (190), Expect = 8e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NA+I DSS W PQ GQHISIQ     T+RELN APTSSPTSTR E   +GENSRST DL
Sbjct: 16 SNAKIIDSSTWYPQIGQHISIQ-----TFRELNQAPTSSPTSTRMETHSSGENSRSTEDL 70


>TR:B1PIY6_9GEMI B1PIY6 C4 protein OS=Cotton leaf curl Gezira virus-[okra:Niger]
          GN=C4 PE=4 SV=1
          Length = 100

 Score = 77.8 bits (190), Expect = 8e-18
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NA+I DSS W PQ GQHISIQ     T+RELN APTSSPTSTR E   +GENSRST DL
Sbjct: 16 SNAKIIDSSTWYPQIGQHISIQ-----TFRELNQAPTSSPTSTRMETHSSGENSRSTEDL 70


>TR:H2E6W1_9GEMI H2E6W1 C4 protein OS=Ageratum yellow vein virus GN=C4 PE=4 SV=1
          Length = 96

 Score = 77.4 bits (189), Expect = 1e-17
 Identities = 42/60 (70%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS   PQPGQHISI+     T+RELNPAPTSSP STR EI  NG NSRST DL
Sbjct: 16 SSARITDSSTLYPQPGQHISIR-----TFRELNPAPTSSPISTRMEILSNGVNSRSTDDL 70


>TR:G8G2P1_9GEMI G8G2P1 AC4 protein OS=Cleome leaf crumple virus PE=4 SV=1
          Length = 97

 Score = 77.4 bits (189), Expect = 1e-17
 Identities = 40/64 (62%), Positives = 49/64 (76%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +R  +NARI DSS W P+PGQHISI+     TYREL+ APTSSPTST+T I  NGE+SRS
Sbjct: 12 SRXSSNARIKDSSTWYPRPGQHISIR-----TYRELSRAPTSSPTSTKTGILWNGEHSRS 66

Query: 68 TADL 71
          T ++
Sbjct: 67 TGEV 70


>TR:G8G2N1_9GEMI G8G2N1 AC4 protein OS=Cleome leaf crumple virus PE=4 SV=1
          Length = 97

 Score = 77.4 bits (189), Expect = 1e-17
 Identities = 40/64 (62%), Positives = 49/64 (76%), Gaps = 5/64 (7%)

Query: 8  NRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRS 67
          +R  +NARI DSS W P+PGQHISI+     TYREL+ APTSSPTST+T I  NGE+SRS
Sbjct: 12 SRASSNARIKDSSTWYPRPGQHISIR-----TYRELSRAPTSSPTSTKTGILWNGEHSRS 66

Query: 68 TADL 71
          T ++
Sbjct: 67 TGEV 70


>TR:Q65321_9GEMI Q65321 C4 protein OS=Ageratum yellow vein virus PE=4 SV=1
          Length = 98

 Score = 77.4 bits (189), Expect = 1e-17
 Identities = 41/60 (68%), Positives = 44/60 (73%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARITDSS W P PGQHISI+     T+RELNPAPTSSP STRTE   NG + RS  DL
Sbjct: 18 TNARITDSSTWYPLPGQHISIR-----TFRELNPAPTSSPISTRTETPSNGVSFRSMDDL 72


>TR:Q9Z0C3_9GEMI Q9Z0C3 C4 protein OS=Tobacco leaf curl virus GN=C4 PE=4 SV=1
          Length = 85

 Score = 77.0 bits (188), Expect = 1e-17
 Identities = 43/71 (60%), Positives = 49/71 (69%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN       TNA+ITDSS W PQP QHISI+     T+RE NPAPTSSPTS RTE   
Sbjct: 12 SKAN-------TNAKITDSSTWYPQPDQHISIR-----TFREQNPAPTSSPTSIRTETHS 59

Query: 61 NGENSRSTADL 71
          NG +SRST ++
Sbjct: 60 NGGHSRSTEEV 70


>TR:B2X0G9_9GEMI B2X0G9 AC4 protein OS=Macroptilium yellow mosaic virus GN=AC4
          PE=4 SV=1
          Length = 85

 Score = 77.0 bits (188), Expect = 1e-17
 Identities = 39/60 (65%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITD S WSP PGQHISIQ     T++ELN  PTSSP STR E Q NGENSRST ++
Sbjct: 16 SSARITDYSTWSPHPGQHISIQ-----TFKELNRVPTSSPISTRMESQSNGENSRSTVEV 70


>TR:D1GZ47_9GEMI D1GZ47 C4 protein OS=Cotton leaf curl Gezira virus-[okra:BFA]
          GN=C4 PE=4 SV=1
          Length = 100

 Score = 77.4 bits (189), Expect = 1e-17
 Identities = 41/60 (68%), Positives = 45/60 (75%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          +NA+I DSS W PQ GQHISIQ     T+RELN APTSSPTSTR E   +GENSRST DL
Sbjct: 16 SNAKIIDSSTWYPQIGQHISIQ-----TFRELNRAPTSSPTSTRMETHSSGENSRSTEDL 70


>TR:Q0KFY6_9GEMI Q0KFY6 AC4 protein OS=Malvastrum leaf curl Guangdong virus GN=AC4
          PE=4 SV=1
          Length = 96

 Score = 77.0 bits (188), Expect = 1e-17
 Identities = 41/65 (63%), Positives = 47/65 (72%), Gaps = 5/65 (7%)

Query: 7  ANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSR 66
          ++R  T+ARI+DSS W PQPGQHISIQ     T+RELN  PTSSPTST TE   NGE+ R
Sbjct: 11 SSRENTSARISDSSTWYPQPGQHISIQ-----TFRELNQVPTSSPTSTSTETPSNGESFR 65

Query: 67 STADL 71
          S  DL
Sbjct: 66 SMEDL 70


>TR:B2LUM0_9GEMI B2LUM0 AC4 protein OS=Pepper leaf curl Yunnan virus-[YN323]
          GN=AC4 PE=4 SV=1
          Length = 96

 Score = 77.0 bits (188), Expect = 1e-17
 Identities = 40/60 (66%), Positives = 44/60 (73%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          TNARITDSS W PQPGQHISIQ     T+RELNPAPTSSP S +TE    GE+ +S  DL
Sbjct: 16 TNARITDSSTWYPQPGQHISIQ-----TFRELNPAPTSSPISRKTETSSIGESFKSMQDL 70


>TR:Q09M15_9GEMI Q09M15 AC4 OS=Squash leaf curl Philippines virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 76.6 bits (187), Expect = 1e-17
 Identities = 40/60 (66%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS W PQ GQHISI+     T+RELN APTSSP STR E   NGENSRSTA++
Sbjct: 16 SSARITDSSTWCPQVGQHISIR-----TFRELNRAPTSSPISTRMETPSNGENSRSTAEV 70


>TR:D3TIA4_SLCV D3TIA4 AC4 protein OS=Squash leaf curl virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 76.6 bits (187), Expect = 1e-17
 Identities = 40/60 (66%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS W PQ GQHISI+     T+RELN APTSSP STR E   NGENSRSTA++
Sbjct: 16 SSARITDSSTWCPQVGQHISIR-----TFRELNRAPTSSPISTRMETPSNGENSRSTAEV 70


>TR:A9YY93_9GEMI A9YY93 AC4 OS=Squash leaf curl Philippines virus GN=AC4 PE=4 SV=1
          Length = 85

 Score = 76.6 bits (187), Expect = 1e-17
 Identities = 40/60 (66%), Positives = 46/60 (76%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS W PQ GQHISI+     T+RELN APTSSP STR E   NGENSRSTA++
Sbjct: 16 SSARITDSSTWCPQVGQHISIR-----TFRELNRAPTSSPISTRMETPSNGENSRSTAEV 70


>TR:A7L393_9GEMI A7L393 AC4 protein OS=Macroptilium golden mosaic
          virus-[Jamaica1:SpanishTown] GN=AC4 PE=4 SV=1
          Length = 85

 Score = 76.6 bits (187), Expect = 1e-17
 Identities = 41/68 (60%), Positives = 48/68 (70%), Gaps = 5/68 (7%)

Query: 4  NGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGE 63
          +  ++R  + ARITD SIW PQ GQHISI+     TYRELNPAPTSSPTS RT    NGE
Sbjct: 8  SSSSSRGNSTARITDCSIWCPQAGQHISIR-----TYRELNPAPTSSPTSRRTGTPSNGE 62

Query: 64 NSRSTADL 71
           SRST ++
Sbjct: 63 CSRSTVEV 70


>TR:Q09M27_9GEMI Q09M27 AC4 OS=Ageratum yellow vein Hualian
          virus-[Taiwan:Hualian2:2000] GN=AC4 PE=4 SV=1
          Length = 96

 Score = 76.6 bits (187), Expect = 2e-17
 Identities = 40/59 (67%), Positives = 44/59 (74%), Gaps = 5/59 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTAD 70
          T+ARI DSSIW PQP QHISI+     T+RELNPAPTSSP STRTE   NGE+ RS  D
Sbjct: 16 TDARIRDSSIWYPQPDQHISIR-----TFRELNPAPTSSPISTRTETPSNGESFRSMQD 69


>TR:G8G2Q1_9GEMI G8G2Q1 AC4 protein OS=Cleome leaf crumple virus PE=4 SV=1
          Length = 97

 Score = 76.6 bits (187), Expect = 2e-17
 Identities = 39/60 (65%), Positives = 48/60 (80%), Gaps = 5/60 (8%)

Query: 12 TNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQLNGENSRSTADL 71
          ++ARITDSS W P+PGQHISI+     TYREL+ APTSSPTST+T I  NGE+SRST ++
Sbjct: 16 SSARITDSSTWYPRPGQHISIR-----TYRELSRAPTSSPTSTKTGILWNGEHSRSTGEV 70


>TR:Q7T5U2_9GEMI Q7T5U2 AL4 protein OS=Tomato chino La Paz virus - [Baja
          California Sur] GN=AL4 PE=4 SV=1
          Length = 85

 Score = 76.3 bits (186), Expect = 2e-17
 Identities = 44/71 (61%), Positives = 49/71 (69%), Gaps = 12/71 (16%)

Query: 1  SKANGEANRLLTNARITDSSIWSPQPGQHISIQMCSYSTYRELNPAPTSSPTSTRTEIQL 60
          SKAN +        +I DSS W PQ GQHISI+     T+REL+ APTSSP STR EIQ 
Sbjct: 12 SKANSKR-------KIADSSTWYPQLGQHISIR-----TFRELSQAPTSSPMSTRMEIQS 59

Query: 61 NGENSRSTADL 71
          NGENSRSTADL
Sbjct: 60 NGENSRSTADL 70


  Database: uniprotkb
    Posted date:  Jul 10, 2012  1:00 AM
  Number of letters in database: 7,785,494,668
  Number of sequences in database:  23,734,728
  
Lambda     K      H
   0.308    0.121    0.347 

Gapped
Lambda     K      H
   0.267   0.0410    0.140 


Matrix: BLOSUM62
Gap Penalties: Existence: 11, Extension: 1
Number of Sequences: 23734728
Number of Hits to DB: 1,126,808,703
Number of extensions: 34961881
Number of successful extensions: 80835
Number of sequences better than 10.0: 1460
Number of HSP's gapped: 79925
Number of HSP's successfully gapped: 1460
Length of query: 76
Length of database: 7,785,494,668
Length adjustment: 47
Effective length of query: 29
Effective length of database: 6,669,962,452
Effective search space: 193428911108
Effective search space used: 193428911108
Neighboring words threshold: 11
Window for multiple hits: 40
X1: 16 ( 7.1 bits)
X2: 38 (14.6 bits)
X3: 64 (24.7 bits)
S1: 42 (21.7 bits)
S2: 77 (34.3 bits)
</output></ns2:getResultResponse>